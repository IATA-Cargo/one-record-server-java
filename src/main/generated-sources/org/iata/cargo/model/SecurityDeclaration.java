
package org.iata.cargo.model;

import java.io.Serializable;
import java.util.Set;
import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLDataProperty;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraint;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;
import org.iata.cargo.Vocabulary;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * Security declaration details
 * 
 * This class was generated by OWL2Java 0.20.2
 * 
 */
@OWLClass(iri = Vocabulary.s_c_SecurityDeclaration)
public class SecurityDeclaration
    extends LogisticsObject
    implements Serializable
{

    /**
     * Regulated entity issuing the Security Declaration
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_hasIssuingRegulatedEntity)
@JsonProperty(Vocabulary.s_p_hasIssuingRegulatedEntity)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_RegulatedEntity, max = 1)
    })
    protected RegulatedEntity hasIssuingRegulatedEntity;
    /**
     * Any other regulated entity that accepts custody of the cargo and accepts the security status originally issued
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_hasOtherRegulatedEntity)
@JsonProperty(Vocabulary.s_p_hasOtherRegulatedEntity)
    protected Set<RegulatedEntity> hasOtherRegulatedEntity;
    /**
     * Regulated entity that tendered the consignment
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_hasTenderingRegulatedEntity)
@JsonProperty(Vocabulary.s_p_hasTenderingRegulatedEntity)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_RegulatedEntity, max = 1)
    })
    protected Set<Thing> hasTenderingRegulatedEntity;
    /**
     * Name of person (or employee ID) who issued the security status
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_isIssuedByActor)
@JsonProperty(Vocabulary.s_p_isIssuedByActor)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Person, max = 1)
    })
    protected Person isIssuedByActor;
    /**
     * Reference to the Piece the document was issued for
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_isIssuedForPiece)
@JsonProperty(Vocabulary.s_p_isIssuedForPiece)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Piece, max = 1)
    })
    protected Piece isIssuedForPiece;
    /**
     * Any additional information that may be required by an ICAO Member State
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasAdditionalSecurityInformation)
@JsonProperty(Vocabulary.s_p_hasAdditionalSecurityInformation)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String hasAdditionalSecurityInformation;
    /**
     * Exemption code - e.g. BIOM- Bio-Medical Samples
     * SMUS - small undersized shipments MAIL - mail
     * BIOM - bio-medical samples
     * DIPL - diplomatic bags or diplomatic mail
     * LFSM - life-saving materials NUCL - nuclear materials
     * TRNS - transfer or transshipment
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasExemptionCode)
@JsonProperty(Vocabulary.s_p_hasExemptionCode)
    protected Set<String> hasExemptionCode;
    /**
     * Other methods used to secure the cargo
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasOtherScreeningMethods)
@JsonProperty(Vocabulary.s_p_hasOtherScreeningMethods)
    protected Set<String> hasOtherScreeningMethods;
    /**
     * Screening methods which have been used to secure the cargo
     * PHS â€“ Physical Inspection and/or hand search
     * VCK - Visual check
     * XRY- X-ray equipment
     * EDS - Explosive detection system
     * EDD - Explosive detection dogs
     * ETD - Explosive trace detection equipment - particles or vapor
     * CMD - Cargo metal detection
     * AOM - Subjected to any other means: this entry should be followed by free text specifying what other mean was used to secure the cargo
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasScreeningMethods)
@JsonProperty(Vocabulary.s_p_hasScreeningMethods)
    protected Set<String> hasScreeningMethods;
    /**
     * Security status indicator (CXML 1.103) - e.g. SPX- Cargo Secure for Passenger and All-Cargo Aircraft 
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasSecurityStatus)
@JsonProperty(Vocabulary.s_p_hasSecurityStatus)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasSecurityStatus;
    /**
     * Date and time when the security status was issued
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_isIssuedOn)
@JsonProperty(Vocabulary.s_p_isIssuedOn)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> isIssuedOn;

    public void setHasIssuingRegulatedEntity(RegulatedEntity hasIssuingRegulatedEntity) {
        this.hasIssuingRegulatedEntity = hasIssuingRegulatedEntity;
    }

    public RegulatedEntity getHasIssuingRegulatedEntity() {
        return hasIssuingRegulatedEntity;
    }

    public void setHasOtherRegulatedEntity(Set<RegulatedEntity> hasOtherRegulatedEntity) {
        this.hasOtherRegulatedEntity = hasOtherRegulatedEntity;
    }

    public Set<RegulatedEntity> getHasOtherRegulatedEntity() {
        return hasOtherRegulatedEntity;
    }

    public void setHasTenderingRegulatedEntity(Set<Thing> hasTenderingRegulatedEntity) {
        this.hasTenderingRegulatedEntity = hasTenderingRegulatedEntity;
    }

    public Set<Thing> getHasTenderingRegulatedEntity() {
        return hasTenderingRegulatedEntity;
    }

    public void setIsIssuedByActor(Person isIssuedByActor) {
        this.isIssuedByActor = isIssuedByActor;
    }

    public Person getIsIssuedByActor() {
        return isIssuedByActor;
    }

    public void setIsIssuedForPiece(Piece isIssuedForPiece) {
        this.isIssuedForPiece = isIssuedForPiece;
    }

    public Piece getIsIssuedForPiece() {
        return isIssuedForPiece;
    }

    public void setHasAdditionalSecurityInformation(String hasAdditionalSecurityInformation) {
        this.hasAdditionalSecurityInformation = hasAdditionalSecurityInformation;
    }

    public String getHasAdditionalSecurityInformation() {
        return hasAdditionalSecurityInformation;
    }

    public void setHasExemptionCode(Set<String> hasExemptionCode) {
        this.hasExemptionCode = hasExemptionCode;
    }

    public Set<String> getHasExemptionCode() {
        return hasExemptionCode;
    }

    public void setHasOtherScreeningMethods(Set<String> hasOtherScreeningMethods) {
        this.hasOtherScreeningMethods = hasOtherScreeningMethods;
    }

    public Set<String> getHasOtherScreeningMethods() {
        return hasOtherScreeningMethods;
    }

    public void setHasScreeningMethods(Set<String> hasScreeningMethods) {
        this.hasScreeningMethods = hasScreeningMethods;
    }

    public Set<String> getHasScreeningMethods() {
        return hasScreeningMethods;
    }

    public void setHasSecurityStatus(Set<String> hasSecurityStatus) {
        this.hasSecurityStatus = hasSecurityStatus;
    }

    public Set<String> getHasSecurityStatus() {
        return hasSecurityStatus;
    }

    public void setIsIssuedOn(Set<String> isIssuedOn) {
        this.isIssuedOn = isIssuedOn;
    }

    public Set<String> getIsIssuedOn() {
        return isIssuedOn;
    }

}
