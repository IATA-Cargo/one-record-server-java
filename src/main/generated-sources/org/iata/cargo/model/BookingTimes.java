
package org.iata.cargo.model;

import java.io.Serializable;
import java.time.OffsetDateTime;
import java.util.Set;
import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLDataProperty;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraint;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;
import org.iata.cargo.Vocabulary;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * Previsouly called Schedule. This object refers to times used for the Booking Option Request (preferences part of the request) or the Booking Option (times sur as LAT where there is a commitment from the carrier)
 * 
 * This class was generated by OWL2Java 0.20.2
 * 
 */
@OWLClass(iri = Vocabulary.s_c_BookingTimes)
public class BookingTimes
    extends LogisticsObject
    implements Serializable
{

    /**
     * Reference to the BookingOptionRequest the LogisticsObject is detailling
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_isForBookingOption)
@JsonProperty(Vocabulary.s_p_isForBookingOption)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_BookingOption, max = 1)
    })
    protected Set<Thing> isForBookingOption;
    /**
     * Reference to the BookingOptionRequest the information of the LogisticsObject is detailling
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_isForBookingOptionRequest)
@JsonProperty(Vocabulary.s_p_isForBookingOptionRequest)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_BookingOptionRequest, max = 1)
    })
    protected Set<Thing> isForBookingOptionRequest;
    /**
     * Earliest acceptance date time (requested or proposed)
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasEarliestAcceptanceTime)
@JsonProperty(Vocabulary.s_p_hasEarliestAcceptanceTime)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasEarliestAcceptanceTime;
    /**
     * Latest Acceptance time as per CargoIQ definition (requested, proposed or actual)
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasLatestAcceptanceTime)
@JsonProperty(Vocabulary.s_p_hasLatestAcceptanceTime)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasLatestAcceptanceTime;
    /**
     * Latest arrival time at destination
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasLatestArrivalTime)
@JsonProperty(Vocabulary.s_p_hasLatestArrivalTime)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#dateTime", max = 1)
    })
    protected OffsetDateTime hasLatestArrivalTime;
    /**
     * Time of availability of the shipment as per CargoIQ definition
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasTimeOfAvailability)
@JsonProperty(Vocabulary.s_p_hasTimeOfAvailability)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#dateTime", max = 1)
    })
    protected OffsetDateTime hasTimeOfAvailability;

    public void setIsForBookingOption(Set<Thing> isForBookingOption) {
        this.isForBookingOption = isForBookingOption;
    }

    public Set<Thing> getIsForBookingOption() {
        return isForBookingOption;
    }

    public void setIsForBookingOptionRequest(Set<Thing> isForBookingOptionRequest) {
        this.isForBookingOptionRequest = isForBookingOptionRequest;
    }

    public Set<Thing> getIsForBookingOptionRequest() {
        return isForBookingOptionRequest;
    }

    public void setHasEarliestAcceptanceTime(Set<String> hasEarliestAcceptanceTime) {
        this.hasEarliestAcceptanceTime = hasEarliestAcceptanceTime;
    }

    public Set<String> getHasEarliestAcceptanceTime() {
        return hasEarliestAcceptanceTime;
    }

    public void setHasLatestAcceptanceTime(Set<String> hasLatestAcceptanceTime) {
        this.hasLatestAcceptanceTime = hasLatestAcceptanceTime;
    }

    public Set<String> getHasLatestAcceptanceTime() {
        return hasLatestAcceptanceTime;
    }

    public void setHasLatestArrivalTime(OffsetDateTime hasLatestArrivalTime) {
        this.hasLatestArrivalTime = hasLatestArrivalTime;
    }

    public OffsetDateTime getHasLatestArrivalTime() {
        return hasLatestArrivalTime;
    }

    public void setHasTimeOfAvailability(OffsetDateTime hasTimeOfAvailability) {
        this.hasTimeOfAvailability = hasTimeOfAvailability;
    }

    public OffsetDateTime getHasTimeOfAvailability() {
        return hasTimeOfAvailability;
    }

}
