
package org.iata.cargo.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import cz.cvut.kbss.jopa.model.annotations.*;
import org.iata.cargo.Vocabulary;

import java.io.Serializable;
import java.util.Set;


/**
 * Action to describe store-in or store-out
 * 
 * This class was generated by OWL2Java 0.22.0
 * 
 */
@OWLClass(iri = Vocabulary.s_c_Storing)
public class Storing
    extends LogisticsAction
    implements Serializable
{

    /**
     * Reference to the Objects being stored in or stored out
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_storedObjects)
    @JsonProperty(Vocabulary.s_p_storedObjects)
    protected Set<PhysicalLogisticsObject> storedObjects;
    /**
     * Short text stating the exact place of storage
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_storagePlaceIdentifier)
    @JsonProperty(Vocabulary.s_p_storagePlaceIdentifier)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String storagePlaceIdentifier;
    /**
     * Enum stating whether the StoringAction describes the store-in or the store-out
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_storingType)
    @JsonProperty(Vocabulary.s_p_storingType)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String storingType;

    public void setStoredObjects(Set<PhysicalLogisticsObject> storedObjects) {
        this.storedObjects = storedObjects;
    }

    public Set<PhysicalLogisticsObject> getStoredObjects() {
        return storedObjects;
    }

    public void setStoragePlaceIdentifier(String storagePlaceIdentifier) {
        this.storagePlaceIdentifier = storagePlaceIdentifier;
    }

    public String getStoragePlaceIdentifier() {
        return storagePlaceIdentifier;
    }

    public void setStoringType(String storingType) {
        this.storingType = storingType;
    }

    public String getStoringType() {
        return storingType;
    }

}
