
package org.iata.cargo.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLDataProperty;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraint;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;
import cz.cvut.kbss.jopa.model.annotations.Types;
import io.swagger.annotations.ApiModelProperty;
import org.iata.cargo.Vocabulary;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import java.util.Set;


/**
 * Transport segment details
 * 
 * This class was generated by OWL2Java 0.14.6
 * 
 */
@OWLClass(iri = Vocabulary.s_c_TransportSegment)
public class TransportSegment
    extends LogisticsObject
    implements Serializable
{

    @Types
    @JsonProperty("@type")
    @ApiModelProperty(allowableValues = Vocabulary.s_c_TransportSegment)
    protected Set<String> types;

    /**
     * Arrival details including time and date
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_arrivalLocation)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @JsonProperty(Vocabulary.s_p_arrivalLocation)
    protected Location arrivalLocation;
    /**
     * Method of calculation of the CO2 emissions
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_co2CalculationMethod)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @JsonProperty(Vocabulary.s_p_co2CalculationMethod)
    protected CO2CalcMethod co2CalculationMethod;
    /**
     * Amount of CO2 emitted (e.g. 34 kg/km)
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_co2Emissions)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @JsonProperty(Vocabulary.s_p_co2Emissions)
    protected Value co2Emissions;
    /**
     * Departure details including time and date
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_departureLocation)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @JsonProperty(Vocabulary.s_p_departureLocation)
    protected Location departureLocation;
    /**
     * Distance calculated if distance measured is not available
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_distanceCalculated)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @JsonProperty(Vocabulary.s_p_distanceCalculated)
    protected Value distanceCalculated;
    /**
     * Distance based on actual measured distance (with IOT-devices), or is it a calculated value?
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_distanceMeasured)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @JsonProperty(Vocabulary.s_p_distanceMeasured)
    protected Value distanceMeasured;
    /**
     * Reference to document or logistics object (URI)
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_externalReference_A_A)
    @JsonProperty(Vocabulary.s_p_externalReference_A_A)
    protected Set<ExternalReference> externalReference;
    /**
     * calculated fuel consumption, if measured not available
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_fuelAmountCalculated)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @JsonProperty(Vocabulary.s_p_fuelAmountCalculated)
    protected Value fuelAmountCalculated;
    /**
     * actual measured fuel consumption
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_fuelAmountMeasured)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @JsonProperty(Vocabulary.s_p_fuelAmountMeasured)
    protected Value fuelAmountMeasured;
    /**
     * Piece(s) assigned to the transport segment
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_piece_A)
    @JsonProperty(Vocabulary.s_p_piece_A)
    protected Set<Piece> piece;
    /**
     * Transport means details
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_transportMeans)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @JsonProperty(Vocabulary.s_p_transportMeans)
    protected TransportMeans transportMeans;
    /**
     * Name of the person operating the transport means (e.g. aircraft captain, truck driver)
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_transportMeansOperator)
    @JsonProperty(Vocabulary.s_p_transportMeansOperator)
    protected Set<Person> transportMeansOperator;
    /**
     * ULD assigned to the transport segment
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_uld)
    @JsonProperty(Vocabulary.s_p_uld)
    protected Set<Uld> uld;
    /**
     * e.g. Kerosene, Diesel, SAF, Electricity [renewable], Electricity [non-renewable]
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_fuelType)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    @JsonProperty(Vocabulary.s_p_fuelType)
    protected String fuelType;
    /**
     * Mode Code
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_modeCode)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#decimal", max = 1)
    })
    @JsonProperty(Vocabulary.s_p_modeCode)
    protected BigDecimal modeCode;
    /**
     * Seal identifier
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_seal)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    @JsonProperty(Vocabulary.s_p_seal)
    protected String seal;
    /**
     * Date associated with TransportIdentifier to uniquely identify the transport line 
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_transportDate)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#dateTime", max = 1)
    })
    @JsonProperty(Vocabulary.s_p_transportDate)
    protected Date transportDate;
    /**
     * Airline flight number, or rail /  truck / maritime line id
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_transportIdentifier)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#decimal", max = 1)
    })
    @JsonProperty(Vocabulary.s_p_transportIdentifier)
    protected BigDecimal transportIdentifier;

    public void setArrivalLocation(Location arrivalLocation) {
        this.arrivalLocation = arrivalLocation;
    }

    public Location getArrivalLocation() {
        return arrivalLocation;
    }

    public void setCo2CalculationMethod(CO2CalcMethod co2CalculationMethod) {
        this.co2CalculationMethod = co2CalculationMethod;
    }

    public CO2CalcMethod getCo2CalculationMethod() {
        return co2CalculationMethod;
    }

    public void setCo2Emissions(Value co2Emissions) {
        this.co2Emissions = co2Emissions;
    }

    public Value getCo2Emissions() {
        return co2Emissions;
    }

    public void setDepartureLocation(Location departureLocation) {
        this.departureLocation = departureLocation;
    }

    public Location getDepartureLocation() {
        return departureLocation;
    }

    public void setDistanceCalculated(Value distanceCalculated) {
        this.distanceCalculated = distanceCalculated;
    }

    public Value getDistanceCalculated() {
        return distanceCalculated;
    }

    public void setDistanceMeasured(Value distanceMeasured) {
        this.distanceMeasured = distanceMeasured;
    }

    public Value getDistanceMeasured() {
        return distanceMeasured;
    }

    public void setExternalReference(Set<ExternalReference> externalReference) {
        this.externalReference = externalReference;
    }

    public Set<ExternalReference> getExternalReference() {
        return externalReference;
    }

    public void setFuelAmountCalculated(Value fuelAmountCalculated) {
        this.fuelAmountCalculated = fuelAmountCalculated;
    }

    public Value getFuelAmountCalculated() {
        return fuelAmountCalculated;
    }

    public void setFuelAmountMeasured(Value fuelAmountMeasured) {
        this.fuelAmountMeasured = fuelAmountMeasured;
    }

    public Value getFuelAmountMeasured() {
        return fuelAmountMeasured;
    }

    public void setPiece(Set<Piece> piece) {
        this.piece = piece;
    }

    public Set<Piece> getPiece() {
        return piece;
    }

    public void setTransportMeans(TransportMeans transportMeans) {
        this.transportMeans = transportMeans;
    }

    public TransportMeans getTransportMeans() {
        return transportMeans;
    }

    public void setTransportMeansOperator(Set<Person> transportMeansOperator) {
        this.transportMeansOperator = transportMeansOperator;
    }

    public Set<Person> getTransportMeansOperator() {
        return transportMeansOperator;
    }

    public void setUld(Set<Uld> uld) {
        this.uld = uld;
    }

    public Set<Uld> getUld() {
        return uld;
    }

    public void setFuelType(String fuelType) {
        this.fuelType = fuelType;
    }

    public String getFuelType() {
        return fuelType;
    }

    public void setModeCode(BigDecimal modeCode) {
        this.modeCode = modeCode;
    }

    public BigDecimal getModeCode() {
        return modeCode;
    }

    public void setSeal(String seal) {
        this.seal = seal;
    }

    public String getSeal() {
        return seal;
    }

    public void setTransportDate(Date transportDate) {
        this.transportDate = transportDate;
    }

    public Date getTransportDate() {
        return transportDate;
    }

    public void setTransportIdentifier(BigDecimal transportIdentifier) {
        this.transportIdentifier = transportIdentifier;
    }

    public BigDecimal getTransportIdentifier() {
        return transportIdentifier;
    }


    public Set<String> getTypes() {
        return types;
    }


    public void setTypes(Set<String> types) {
        this.types = types;
    }

}
