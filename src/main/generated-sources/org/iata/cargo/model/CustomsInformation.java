
package org.iata.cargo.model;

import java.io.Serializable;
import java.util.Set;
import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLDataProperty;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraint;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;
import org.iata.cargo.Vocabulary;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * Customs information details
 * 
 * This class was generated by OWL2Java 0.20.2
 * 
 */
@OWLClass(iri = Vocabulary.s_c_CustomsInformation)
public class CustomsInformation
    extends LogisticsObject
    implements Serializable
{

    /**
     * Reference to the Piece the document was issued for
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_isIssuedForPiece)
@JsonProperty(Vocabulary.s_p_isIssuedForPiece)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Piece, max = 1)
    })
    protected Piece isIssuedForPiece;
    /**
     * Customs, Security and Regulatory Control Information Identifier. Coded indicator qualifying Customs related information: Item Number "I", Exemption Legend "L", System Downtime Reference "S", Unique Consignment Reference Number "U", Movement Reference Number "M" .
     * Refers to Code List 1.100
     * Condition: At least one of the three elements (Country Code, Information Identifier or Customs, Security and Regulatory Control Information Identifier) must be completed
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasContentCode)
@JsonProperty(Vocabulary.s_p_hasContentCode)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasContentCode;
    /**
     * Country ISO code. Refer ISO 3166-2. At least one of the three elements (Country Code, Information Identifier or Customs, Security and Regulatory Control Information Identifier) must be completed
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasCountryCode)
@JsonProperty(Vocabulary.s_p_hasCountryCode)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String hasCountryCode;
    /**
     * Free text for customs remarks, not used in OCI Composition Rules Table
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasCustomsNote)
@JsonProperty(Vocabulary.s_p_hasCustomsNote)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String hasCustomsNote;
    /**
     * Supplementary Customs, Security and Regulatory Control Information
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasOtherCustomsInformation)
@JsonProperty(Vocabulary.s_p_hasOtherCustomsInformation)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String hasOtherCustomsInformation;
    /**
     * Information Identifier. Code identifying a piece of information/entity e.g. "IMP" for import, "EXP" for export, "AGT" for Agent, "ISS" for The Regulated Agent Issuing the Security Status for a Consignment etc.
     * Condition: At least one of the three elements (Country Code, Information Identifier or Customs, Security and Regulatory Control Information Identifier) must be completed
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasSubjectCode)
@JsonProperty(Vocabulary.s_p_hasSubjectCode)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasSubjectCode;

    public void setIsIssuedForPiece(Piece isIssuedForPiece) {
        this.isIssuedForPiece = isIssuedForPiece;
    }

    public Piece getIsIssuedForPiece() {
        return isIssuedForPiece;
    }

    public void setHasContentCode(Set<String> hasContentCode) {
        this.hasContentCode = hasContentCode;
    }

    public Set<String> getHasContentCode() {
        return hasContentCode;
    }

    public void setHasCountryCode(String hasCountryCode) {
        this.hasCountryCode = hasCountryCode;
    }

    public String getHasCountryCode() {
        return hasCountryCode;
    }

    public void setHasCustomsNote(String hasCustomsNote) {
        this.hasCustomsNote = hasCustomsNote;
    }

    public String getHasCustomsNote() {
        return hasCustomsNote;
    }

    public void setHasOtherCustomsInformation(String hasOtherCustomsInformation) {
        this.hasOtherCustomsInformation = hasOtherCustomsInformation;
    }

    public String getHasOtherCustomsInformation() {
        return hasOtherCustomsInformation;
    }

    public void setHasSubjectCode(Set<String> hasSubjectCode) {
        this.hasSubjectCode = hasSubjectCode;
    }

    public Set<String> getHasSubjectCode() {
        return hasSubjectCode;
    }

}
