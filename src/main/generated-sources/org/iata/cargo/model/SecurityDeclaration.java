
package org.iata.cargo.model;

import java.io.Serializable;
import java.util.Date;
import java.util.Set;
import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLDataProperty;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraint;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;
import org.iata.cargo.Vocabulary;


/**
 * Security declaration details
 * 
 * This class was generated by OWL2Java 0.17.2
 * 
 */
@OWLClass(iri = Vocabulary.s_c_SecurityDeclaration)
public class SecurityDeclaration
    extends LogisticsObject
    implements Serializable
{

    /**
     * Name of person (or employee ID) who issued the security status
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_issuedBy)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1),
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, min = 1, max = -1)
    })
    protected Person issuedBy;
    /**
     * Any other regulated entity that accepts custody of the cargo and accepts the security status originally issued
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_otherRegulatedEntity)
    protected Set<RegulatedEntity> otherRegulatedEntity;
    /**
     * Piece linked to the Security Declaration
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_piece_A_A)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected Piece piece;
    /**
     * Regulated entity that tendered the consignment
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_receivedFrom)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected RegulatedEntity receivedFrom;
    /**
     * Regulated entity issuing the Security Declaration
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_regulatedEntityIssuer)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1),
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, min = 1, max = -1)
    })
    protected RegulatedEntity regulatedEntityIssuer;
    /**
     * Any additional information that may be required by an ICAO Member State
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_additionalSecurityInformation)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String additionalSecurityInformation;
    /**
     * Exemption code - e.g. BIOM- Bio-Medical Samples 
     * SMUS - small undersized shipments MAIL - mail
     * BIOM - bio-medical samples
     * DIPL - diplomatic bags or diplomatic mail
     * LFSM - life-saving materials NUCL - nuclear materials
     * TRNS - transfer or transshipment
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_groundsForExemption)
    protected Set<String> groundsForExemption;
    /**
     * Date and time when the security status was issued
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_issuedOn)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#dateTime", max = 1),
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#dateTime", min = 1, max = -1)
    })
    protected Date issuedOn;
    /**
     * Other methods used to secure the cargo
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_otherScreeningMethods)
    protected Set<String> otherScreeningMethods;
    /**
     * Screening methods which have been used to secure the cargo
     * PHS \u2013 Physical Inspection and/or hand search 
     * VCK - Visual check 
     * XRY- X-ray equipment 
     * EDS - Explosive detection system 
     * EDD - Explosive detection dogs
     * ETD - Explosive trace detection equipment - particles or vapor 
     * CMD - Cargo metal detection
     * AOM - Subjected to any other means: this entry should be followed by free text specifying what other mean was used to secure the cargo
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_screeningMethod)
    protected Set<String> screeningMethod;
    /**
     * Security status indicator (CXML 1.103) - e.g. SPX- Cargo Secure for Passenger and All-Cargo Aircraft 
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_securityStatus_A)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1),
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", min = 1, max = -1)
    })
    protected String securityStatus;

    public void setIssuedBy(Person issuedBy) {
        this.issuedBy = issuedBy;
    }

    public Person getIssuedBy() {
        return issuedBy;
    }

    public void setOtherRegulatedEntity(Set<RegulatedEntity> otherRegulatedEntity) {
        this.otherRegulatedEntity = otherRegulatedEntity;
    }

    public Set<RegulatedEntity> getOtherRegulatedEntity() {
        return otherRegulatedEntity;
    }

    public void setPiece(Piece piece) {
        this.piece = piece;
    }

    public Piece getPiece() {
        return piece;
    }

    public void setReceivedFrom(RegulatedEntity receivedFrom) {
        this.receivedFrom = receivedFrom;
    }

    public RegulatedEntity getReceivedFrom() {
        return receivedFrom;
    }

    public void setRegulatedEntityIssuer(RegulatedEntity regulatedEntityIssuer) {
        this.regulatedEntityIssuer = regulatedEntityIssuer;
    }

    public RegulatedEntity getRegulatedEntityIssuer() {
        return regulatedEntityIssuer;
    }

    public void setAdditionalSecurityInformation(String additionalSecurityInformation) {
        this.additionalSecurityInformation = additionalSecurityInformation;
    }

    public String getAdditionalSecurityInformation() {
        return additionalSecurityInformation;
    }

    public void setGroundsForExemption(Set<String> groundsForExemption) {
        this.groundsForExemption = groundsForExemption;
    }

    public Set<String> getGroundsForExemption() {
        return groundsForExemption;
    }

    public void setIssuedOn(Date issuedOn) {
        this.issuedOn = issuedOn;
    }

    public Date getIssuedOn() {
        return issuedOn;
    }

    public void setOtherScreeningMethods(Set<String> otherScreeningMethods) {
        this.otherScreeningMethods = otherScreeningMethods;
    }

    public Set<String> getOtherScreeningMethods() {
        return otherScreeningMethods;
    }

    public void setScreeningMethod(Set<String> screeningMethod) {
        this.screeningMethod = screeningMethod;
    }

    public Set<String> getScreeningMethod() {
        return screeningMethod;
    }

    public void setSecurityStatus(String securityStatus) {
        this.securityStatus = securityStatus;
    }

    public String getSecurityStatus() {
        return securityStatus;
    }

}
