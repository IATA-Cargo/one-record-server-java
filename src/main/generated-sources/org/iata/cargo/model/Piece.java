
package org.iata.cargo.model;

import java.io.Serializable;
import java.util.Set;
import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLDataProperty;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraint;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;
import io.swagger.v3.oas.annotations.media.Schema;
import org.iata.cargo.Vocabulary;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * Individual piece or virtual grouping of pieces
 * 
 * This class was generated by OWL2Java 0.20.2
 * 
 */
@OWLClass(iri = Vocabulary.s_c_Piece)
public class Piece
    extends PhysicalLogisticsObject
    implements Serializable
{

    /**
     * Reference to the item(s) contained in the piece
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_containsItem)
@JsonProperty(Vocabulary.s_p_containsItem)
    protected Set<Item> containsItem;
    /**
     * Details of contained piece(s)
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_containsPiece)
@JsonProperty(Vocabulary.s_p_containsPiece)
    protected Set<Piece> containsPiece;
    /**
     * Product of the piece, mandatory when there are no items
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_hasContentDescribedByProduct)
@JsonProperty(Vocabulary.s_p_hasContentDescribedByProduct)
    protected Set<Product> hasContentDescribedByProduct;
    /**
     * Goods production country, mandatory when there are no Items
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_hasContentProductionCountry)
@JsonProperty(Vocabulary.s_p_hasContentProductionCountry)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Country, max = 1)
    })
    protected Set<Thing> hasContentProductionCountry;
    /**
     * Customs details
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_hasCustomsInformation)
@JsonProperty(Vocabulary.s_p_hasCustomsInformation)
    protected Set<CustomsInformation> hasCustomsInformation;
    /**
     * Dimensions details
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_hasDimensions)
@JsonProperty(Vocabulary.s_p_hasDimensions)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Dimensions, max = 1)
    })
    protected Set<Thing> hasDimensions;
    /**
     * Weight details
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_hasGrossWeight)
@JsonProperty(Vocabulary.s_p_hasGrossWeight)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Value, max = 1)
    })
    protected Set<Thing> hasGrossWeight;
    /**
     * Links to Handling instructions / service requests of the piece
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_hasHandlingInstructions)
@JsonProperty(Vocabulary.s_p_hasHandlingInstructions)
    protected Set<HandlingInstructions> hasHandlingInstructions;
    @OWLObjectProperty(iri = Vocabulary.s_p_hasOtherIdentifier)
@JsonProperty(Vocabulary.s_p_hasOtherIdentifier)
    protected Set<OtherIdentifier> hasOtherIdentifier;
    /**
     * Packaging details 
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_hasPackagingType)
@JsonProperty(Vocabulary.s_p_hasPackagingType)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_PackagingType, max = 1)
    })
    protected Set<Thing> hasPackagingType;
    /**
     * Security details of the piece
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_hasSecurityDetails)
@JsonProperty(Vocabulary.s_p_hasSecurityDetails)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_SecurityDeclaration, max = 1)
    })
    protected Set<Thing> hasSecurityDetails;
    /**
     * Volumetric weight details
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_hasVolumetricWeight)
@JsonProperty(Vocabulary.s_p_hasVolumetricWeight)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_VolumetricWeight, max = 1)
    })
    protected VolumetricWeight hasVolumetricWeight;
    /**
     * Information about other Parties involved depending on the context of use
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_involvesParty)
@JsonProperty(Vocabulary.s_p_involvesParty)
    protected Set<Party> involvesParty;
    /**
     * Reference to the parent Piece if the Piece is contained within another Piece
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_isContainedPieceInPiece)
@JsonProperty(Vocabulary.s_p_isContainedPieceInPiece)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Piece, max = 1)
    })
    protected Piece isContainedPieceInPiece;
    /**
     * ULD on which the (virtual) piece has been loaded into - URIs of the ULD
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_isLoadedOnULD)
@JsonProperty(Vocabulary.s_p_isLoadedOnULD)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_LoadingUnit, max = 1)
    })
    protected Set<Thing> isLoadedOnULD;
    /**
     * Shipment on which the piece is assigned to
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_isPartOfShipment)
@JsonProperty(Vocabulary.s_p_isPartOfShipment)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Shipment, max = 1)
    })
    protected Shipment isPartOfShipment;
    /**
     * Coload indicator for the pieces (boolean)
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_canBeColoaded)
@JsonProperty(Vocabulary.s_p_canBeColoaded)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#boolean", max = 1)
    })
    protected Boolean canBeColoaded;
    /**
     * Text holding an ULD Type Code if the Piece fulfills it before UnitComposition
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_fulfillsUldTypeCode)
@JsonProperty(Vocabulary.s_p_fulfillsUldTypeCode)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> fulfillsUldTypeCode;
    /**
     * The value of a shipment declared for carriage purposes , NVD if no value declared
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasDeclaredValueForCarriage)
@JsonProperty(Vocabulary.s_p_hasDeclaredValueForCarriage)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String hasDeclaredValueForCarriage;
    /**
     * The value of a shipment declared for customs purposes , NVD if no value declared
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasDeclaredValueForCustoms)
@JsonProperty(Vocabulary.s_p_hasDeclaredValueForCustoms)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String hasDeclaredValueForCustoms;
    /**
     * Description of goods, for the BookingShipment the commodity list defined by Modernizing Cargo Distribution MCD working group can be used as a referential.
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasGoodsDescription)
@JsonProperty(Vocabulary.s_p_hasGoodsDescription)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasGoodsDescription;
    /**
     * Load type of the shipment or piece (Bulk, ULD, Pallet, Loose)
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasLoadType)
@JsonProperty(Vocabulary.s_p_hasLoadType)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasLoadType;
    /**
     * When no value is declared for Carriage, this field may be completed with the value TRUE otherwise FALSE
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasNvdForCarriage)
@JsonProperty(Vocabulary.s_p_hasNvdForCarriage)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#boolean", max = 1)
    })
    protected Boolean hasNvdForCarriage;
    /**
     * When no value is declared for Customs, this field may be completed with the value TRUE otherwise FALSE
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasNvdForCustoms)
@JsonProperty(Vocabulary.s_p_hasNvdForCustoms)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#boolean", max = 1)
    })
    protected Boolean hasNvdForCustoms;
    /**
     * SSCC-18 code for the value of the package mark, company or bar code, free text, pallet code, etc.
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasPackageIdentifier)
@JsonProperty(Vocabulary.s_p_hasPackageIdentifier)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String hasPackageIdentifier;
    /**
     * Reference identifying how the package is marked. Field is hardcode to "SSCC-18", "UPC" or "Other"
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasPackageMarkCode)
@JsonProperty(Vocabulary.s_p_hasPackageMarkCode)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasPackageMarkCode;
    /**
     * Shipping marks
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasShippingMarks)
@JsonProperty(Vocabulary.s_p_hasShippingMarks)
    protected Set<String> hasShippingMarks;
    /**
     * Shipper's Load And Count  ( total contained piece count as provided by shipper)
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasSlac)
@JsonProperty(Vocabulary.s_p_hasSlac)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#integer", max = 1)
    })
    protected Integer hasSlac;
    /**
     * Unique Piece Identifier (UPID) of the piece. Refer IATA Recommended Practice 1689
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasUpid)
@JsonProperty(Vocabulary.s_p_hasUpid)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasUpid;
    /**
     * Stackable indicator for the pieces (boolean)
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_isStackable)
@JsonProperty(Vocabulary.s_p_isStackable)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> isStackable;
    /**
     * Turnable indicator for the pieces (boolean)
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_isTurnable)
@JsonProperty(Vocabulary.s_p_isTurnable)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#boolean", max = 1)
    })
    protected Boolean isTurnable;

    public void setContainsItem(Set<Item> containsItem) {
        this.containsItem = containsItem;
    }

    public Set<Item> getContainsItem() {
        return containsItem;
    }

    public void setContainsPiece(Set<Piece> containsPiece) {
        this.containsPiece = containsPiece;
    }

    public Set<Piece> getContainsPiece() {
        return containsPiece;
    }

    public void setHasContentDescribedByProduct(Set<Product> hasContentDescribedByProduct) {
        this.hasContentDescribedByProduct = hasContentDescribedByProduct;
    }

    public Set<Product> getHasContentDescribedByProduct() {
        return hasContentDescribedByProduct;
    }

    public void setHasContentProductionCountry(Set<Thing> hasContentProductionCountry) {
        this.hasContentProductionCountry = hasContentProductionCountry;
    }

    public Set<Thing> getHasContentProductionCountry() {
        return hasContentProductionCountry;
    }

    public void setHasCustomsInformation(Set<CustomsInformation> hasCustomsInformation) {
        this.hasCustomsInformation = hasCustomsInformation;
    }

    public Set<CustomsInformation> getHasCustomsInformation() {
        return hasCustomsInformation;
    }

    public void setHasDimensions(Set<Thing> hasDimensions) {
        this.hasDimensions = hasDimensions;
    }

    public Set<Thing> getHasDimensions() {
        return hasDimensions;
    }

    public void setHasGrossWeight(Set<Thing> hasGrossWeight) {
        this.hasGrossWeight = hasGrossWeight;
    }

    public Set<Thing> getHasGrossWeight() {
        return hasGrossWeight;
    }

    public void setHasHandlingInstructions(Set<HandlingInstructions> hasHandlingInstructions) {
        this.hasHandlingInstructions = hasHandlingInstructions;
    }

    public Set<HandlingInstructions> getHasHandlingInstructions() {
        return hasHandlingInstructions;
    }

    public void setHasOtherIdentifier(Set<OtherIdentifier> hasOtherIdentifier) {
        this.hasOtherIdentifier = hasOtherIdentifier;
    }

    public Set<OtherIdentifier> getHasOtherIdentifier() {
        return hasOtherIdentifier;
    }

    public void setHasPackagingType(Set<Thing> hasPackagingType) {
        this.hasPackagingType = hasPackagingType;
    }

    public Set<Thing> getHasPackagingType() {
        return hasPackagingType;
    }

    public void setHasSecurityDetails(Set<Thing> hasSecurityDetails) {
        this.hasSecurityDetails = hasSecurityDetails;
    }

    public Set<Thing> getHasSecurityDetails() {
        return hasSecurityDetails;
    }

    public void setHasVolumetricWeight(VolumetricWeight hasVolumetricWeight) {
        this.hasVolumetricWeight = hasVolumetricWeight;
    }

    public VolumetricWeight getHasVolumetricWeight() {
        return hasVolumetricWeight;
    }

    public void setInvolvesParty(Set<Party> involvesParty) {
        this.involvesParty = involvesParty;
    }

    public Set<Party> getInvolvesParty() {
        return involvesParty;
    }

    public void setIsContainedPieceInPiece(Piece isContainedPieceInPiece) {
        this.isContainedPieceInPiece = isContainedPieceInPiece;
    }

    public Piece getIsContainedPieceInPiece() {
        return isContainedPieceInPiece;
    }

    public void setIsLoadedOnULD(Set<Thing> isLoadedOnULD) {
        this.isLoadedOnULD = isLoadedOnULD;
    }

    public Set<Thing> getIsLoadedOnULD() {
        return isLoadedOnULD;
    }

    public void setIsPartOfShipment(Shipment isPartOfShipment) {
        this.isPartOfShipment = isPartOfShipment;
    }

    public Shipment getIsPartOfShipment() {
        return isPartOfShipment;
    }

    public void setCanBeColoaded(Boolean canBeColoaded) {
        this.canBeColoaded = canBeColoaded;
    }

    public Boolean getCanBeColoaded() {
        return canBeColoaded;
    }

    public void setFulfillsUldTypeCode(Set<String> fulfillsUldTypeCode) {
        this.fulfillsUldTypeCode = fulfillsUldTypeCode;
    }

    public Set<String> getFulfillsUldTypeCode() {
        return fulfillsUldTypeCode;
    }

    public void setHasDeclaredValueForCarriage(String hasDeclaredValueForCarriage) {
        this.hasDeclaredValueForCarriage = hasDeclaredValueForCarriage;
    }

    public String getHasDeclaredValueForCarriage() {
        return hasDeclaredValueForCarriage;
    }

    public void setHasDeclaredValueForCustoms(String hasDeclaredValueForCustoms) {
        this.hasDeclaredValueForCustoms = hasDeclaredValueForCustoms;
    }

    public String getHasDeclaredValueForCustoms() {
        return hasDeclaredValueForCustoms;
    }

    public void setHasGoodsDescription(Set<String> hasGoodsDescription) {
        this.hasGoodsDescription = hasGoodsDescription;
    }

    public Set<String> getHasGoodsDescription() {
        return hasGoodsDescription;
    }

    public void setHasLoadType(Set<String> hasLoadType) {
        this.hasLoadType = hasLoadType;
    }

    public Set<String> getHasLoadType() {
        return hasLoadType;
    }

    public void setHasNvdForCarriage(Boolean hasNvdForCarriage) {
        this.hasNvdForCarriage = hasNvdForCarriage;
    }

    public Boolean getHasNvdForCarriage() {
        return hasNvdForCarriage;
    }

    public void setHasNvdForCustoms(Boolean hasNvdForCustoms) {
        this.hasNvdForCustoms = hasNvdForCustoms;
    }

    public Boolean getHasNvdForCustoms() {
        return hasNvdForCustoms;
    }

    public void setHasPackageIdentifier(String hasPackageIdentifier) {
        this.hasPackageIdentifier = hasPackageIdentifier;
    }

    public String getHasPackageIdentifier() {
        return hasPackageIdentifier;
    }

    public void setHasPackageMarkCode(Set<String> hasPackageMarkCode) {
        this.hasPackageMarkCode = hasPackageMarkCode;
    }

    public Set<String> getHasPackageMarkCode() {
        return hasPackageMarkCode;
    }

    public void setHasShippingMarks(Set<String> hasShippingMarks) {
        this.hasShippingMarks = hasShippingMarks;
    }

    public Set<String> getHasShippingMarks() {
        return hasShippingMarks;
    }

    public void setHasSlac(Integer hasSlac) {
        this.hasSlac = hasSlac;
    }

    public Integer getHasSlac() {
        return hasSlac;
    }

    public void setHasUpid(Set<String> hasUpid) {
        this.hasUpid = hasUpid;
    }

    public Set<String> getHasUpid() {
        return hasUpid;
    }

    public void setIsStackable(Set<String> isStackable) {
        this.isStackable = isStackable;
    }

    public Set<String> getIsStackable() {
        return isStackable;
    }

    public void setIsTurnable(Boolean isTurnable) {
        this.isTurnable = isTurnable;
    }

    public Boolean getIsTurnable() {
        return isTurnable;
    }

}
