
package org.iata.cargo.model;

import java.io.Serializable;
import java.util.Date;
import java.util.Set;

import com.fasterxml.jackson.annotation.JsonProperty;
import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLDataProperty;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraint;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;
import cz.cvut.kbss.jopa.model.annotations.Types;
import io.swagger.annotations.ApiModelProperty;
import org.iata.cargo.Vocabulary;


/**
 * Transport segment details
 * 
 * This class was generated by OWL2Java 0.16.4
 * 
 */
@OWLClass(iri = Vocabulary.s_c_TransportSegment)
public class TransportSegment
    extends LogisticsObject
    implements Serializable
{

    @Types
    @JsonProperty("@type")
    @ApiModelProperty(allowableValues = Vocabulary.s_c_TransportSegment)
    protected Set<String> types;

    /**
     * Arrival details including time and date
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_arrivalLocation)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @JsonProperty(Vocabulary.s_p_arrivalLocation)
    protected Location arrivalLocation;
    /**
     * Method of calculation of the CO2 emissions
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_co2CalculationMethod)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @JsonProperty(Vocabulary.s_p_co2CalculationMethod)
    protected CO2CalcMethod co2CalculationMethod;
    /**
     * Amount of CO2 emitted (e.g. 34 kg/km)
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_co2Emissions)
    @JsonProperty(Vocabulary.s_p_co2Emissions)
    protected Set<CO2Emissions> co2Emissions;
    /**
     * Departure details including time and date
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_departureLocation)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @JsonProperty(Vocabulary.s_p_departureLocation)
    protected Location departureLocation;
    /**
     * Distance calculated if distance measured is not available
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_distanceCalculated)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @JsonProperty(Vocabulary.s_p_distanceCalculated)
    protected Value distanceCalculated;
    /**
     * Distance based on actual measured distance (with IOT-devices), or is it a calculated value?
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_distanceMeasured)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @JsonProperty(Vocabulary.s_p_distanceMeasured)
    protected Value distanceMeasured;
    /**
     * Reference to document or logistics object (URI)
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_externalReference_A_A)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @JsonProperty(Vocabulary.s_p_externalReference_A_A)
    protected ExternalReference externalReference;
    /**
     * calculated fuel consumption, if measured not available
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_fuelAmountCalculated)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @JsonProperty(Vocabulary.s_p_fuelAmountCalculated)
    protected Value fuelAmountCalculated;
    /**
     * actual measured fuel consumption
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_fuelAmountMeasured)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @JsonProperty(Vocabulary.s_p_fuelAmountMeasured)
    protected Value fuelAmountMeasured;
    /**
     * Actual payload for the transport
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_payload)
    @JsonProperty(Vocabulary.s_p_payload)
    protected Set<Value> payload;
    /**
     * Transport means details
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_transportMeans)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @JsonProperty(Vocabulary.s_p_transportMeans)
    protected TransportMeans transportMeans;
    /**
     * Name of the person operating the transport means (e.g. aircraft captain, truck driver)
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_transportMeansOperator)
    @JsonProperty(Vocabulary.s_p_transportMeansOperator)
    protected Set<Person> transportMeansOperator;
    /**
     * Pieces assigned to the transport segment
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_transportedPieces)
    @JsonProperty(Vocabulary.s_p_transportedPieces)
    protected Set<Piece> transportedPieces;
    /**
     * ULDs assigned to the transport segment
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_transportedUlds)
    @JsonProperty(Vocabulary.s_p_transportedUlds)
    protected Set<ULD> transportedUlds;
    /**
     * Arrival date and time. Actual or planned depends on the movementType property
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_arrivalDate)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#dateTime", max = 1)
    })
    @JsonProperty(Vocabulary.s_p_arrivalDate)
    protected Date arrivalDate;
    /**
     * Departure date and time. Actual or planned depends on the movementType property
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_departureDate)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#dateTime", max = 1)
    })
    @JsonProperty(Vocabulary.s_p_departureDate)
    protected Date departureDate;
    /**
     * e.g. Kerosene, Diesel, SAF, Electricity [renewable], Electricity [non-renewable]
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_fuelType)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    @JsonProperty(Vocabulary.s_p_fuelType)
    protected String fuelType;
    /**
     * Mode Code
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_modeCode)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    @JsonProperty(Vocabulary.s_p_modeCode)
    protected String modeCode;
    /**
     * Pre-Carriage, Main-Carriage or On-Carriage
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_modeQualifier)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    @JsonProperty(Vocabulary.s_p_modeQualifier)
    protected String modeQualifier;
    /**
     * Refers to the type of movement: Actual or planned
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_movementType)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    @JsonProperty(Vocabulary.s_p_movementType)
    protected String movementType;
    /**
     * Seal identifier
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_seal)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    @JsonProperty(Vocabulary.s_p_seal)
    protected String seal;
    /**
     * Identification of the segment level in the movement of the pieces: contractual, flight leg, truck movement, etc.
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_segmentLevel)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    @JsonProperty(Vocabulary.s_p_segmentLevel)
    protected String segmentLevel;
    /**
     * Airline flight number, or rail /  truck / maritime line id
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_transportIdentifier)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    @JsonProperty(Vocabulary.s_p_transportIdentifier)
    protected String transportIdentifier;

    public void setArrivalLocation(Location arrivalLocation) {
        this.arrivalLocation = arrivalLocation;
    }

    public Location getArrivalLocation() {
        return arrivalLocation;
    }

    public void setCo2CalculationMethod(CO2CalcMethod co2CalculationMethod) {
        this.co2CalculationMethod = co2CalculationMethod;
    }

    public CO2CalcMethod getCo2CalculationMethod() {
        return co2CalculationMethod;
    }

    public void setCo2Emissions(Set<CO2Emissions> co2Emissions) {
        this.co2Emissions = co2Emissions;
    }

    public Set<CO2Emissions> getCo2Emissions() {
        return co2Emissions;
    }

    public void setDepartureLocation(Location departureLocation) {
        this.departureLocation = departureLocation;
    }

    public Location getDepartureLocation() {
        return departureLocation;
    }

    public void setDistanceCalculated(Value distanceCalculated) {
        this.distanceCalculated = distanceCalculated;
    }

    public Value getDistanceCalculated() {
        return distanceCalculated;
    }

    public void setDistanceMeasured(Value distanceMeasured) {
        this.distanceMeasured = distanceMeasured;
    }

    public Value getDistanceMeasured() {
        return distanceMeasured;
    }

    public void setExternalReference(ExternalReference externalReference) {
        this.externalReference = externalReference;
    }

    public ExternalReference getExternalReference() {
        return externalReference;
    }

    public void setFuelAmountCalculated(Value fuelAmountCalculated) {
        this.fuelAmountCalculated = fuelAmountCalculated;
    }

    public Value getFuelAmountCalculated() {
        return fuelAmountCalculated;
    }

    public void setFuelAmountMeasured(Value fuelAmountMeasured) {
        this.fuelAmountMeasured = fuelAmountMeasured;
    }

    public Value getFuelAmountMeasured() {
        return fuelAmountMeasured;
    }

    public void setPayload(Set<Value> payload) {
        this.payload = payload;
    }

    public Set<Value> getPayload() {
        return payload;
    }

    public void setTransportMeans(TransportMeans transportMeans) {
        this.transportMeans = transportMeans;
    }

    public TransportMeans getTransportMeans() {
        return transportMeans;
    }

    public void setTransportMeansOperator(Set<Person> transportMeansOperator) {
        this.transportMeansOperator = transportMeansOperator;
    }

    public Set<Person> getTransportMeansOperator() {
        return transportMeansOperator;
    }

    public void setTransportedPieces(Set<Piece> transportedPieces) {
        this.transportedPieces = transportedPieces;
    }

    public Set<Piece> getTransportedPieces() {
        return transportedPieces;
    }

    public void setTransportedUlds(Set<ULD> transportedUlds) {
        this.transportedUlds = transportedUlds;
    }

    public Set<ULD> getTransportedUlds() {
        return transportedUlds;
    }

    public void setArrivalDate(Date arrivalDate) {
        this.arrivalDate = arrivalDate;
    }

    public Date getArrivalDate() {
        return arrivalDate;
    }

    public void setDepartureDate(Date departureDate) {
        this.departureDate = departureDate;
    }

    public Date getDepartureDate() {
        return departureDate;
    }

    public void setFuelType(String fuelType) {
        this.fuelType = fuelType;
    }

    public String getFuelType() {
        return fuelType;
    }

    public void setModeCode(String modeCode) {
        this.modeCode = modeCode;
    }

    public String getModeCode() {
        return modeCode;
    }

    public void setModeQualifier(String modeQualifier) {
        this.modeQualifier = modeQualifier;
    }

    public String getModeQualifier() {
        return modeQualifier;
    }

    public void setMovementType(String movementType) {
        this.movementType = movementType;
    }

    public String getMovementType() {
        return movementType;
    }

    public void setSeal(String seal) {
        this.seal = seal;
    }

    public String getSeal() {
        return seal;
    }

    public void setSegmentLevel(String segmentLevel) {
        this.segmentLevel = segmentLevel;
    }

    public String getSegmentLevel() {
        return segmentLevel;
    }

    public void setTransportIdentifier(String transportIdentifier) {
        this.transportIdentifier = transportIdentifier;
    }

    public String getTransportIdentifier() {
        return transportIdentifier;
    }

    public Set<String> getTypes() {
        return types;
    }

    public void setTypes(Set<String> types) {
        this.types = types;
    }
}
