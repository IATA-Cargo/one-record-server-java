
package org.iata.api.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import cz.cvut.kbss.jopa.model.annotations.*;
import cz.cvut.kbss.jopa.vocabulary.RDFS;
import org.iata.api.Vocabulary;
import org.iata.cargo.model.Organization;

import java.io.Serializable;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Map;
import java.util.Set;


/**
 * Subscription information sent to the publisher
 * 
 * This class was generated by OWL2Java 0.22.0
 * 
 */
@OWLClass(iri = Vocabulary.s_c_Subscription)
public class Subscription
    implements Serializable
{

    @Id(generated = true)
    @JsonProperty("@id")
    protected String id;
    @OWLAnnotationProperty(iri = RDFS.LABEL)
    @JsonIgnore
    protected String name;
    @OWLAnnotationProperty(iri = cz.cvut.kbss.jopa.vocabulary.DC.Elements.DESCRIPTION)
    @JsonIgnore
    protected String description;
    @Types
    @JsonProperty("@type")
    protected Set<String> types;
    @Properties
    @JsonIgnore
    protected Map<String, Set<String>> properties;
    @OWLObjectProperty(iri = Vocabulary.s_p_hasSubscriber)
    @JsonProperty(Vocabulary.s_p_hasSubscriber)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Organization, min = 1, max = 1)
    })
    protected Organization hasSubscriber;
    @OWLObjectProperty(iri = Vocabulary.s_p_hasTopicType)
    @JsonProperty(Vocabulary.s_p_hasTopicType)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_TopicType, min = 1, max = 1)
    })
    protected TopicType hasTopicType;
    /**
     * Expiry date as date time of the subscription information that supports caching but does not require the ONE Record client to store the datetime when the Subscription object was received; if not given: the information does not expire
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_expiresAt)
    @JsonProperty(Vocabulary.s_p_expiresAt)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#dateTime", max = 1)
    })
    protected OffsetDateTime expiresAt;
    /**
     * Content types that the subscriber wants to receive in the notifications, e.g. application/ld+json
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasContentType)
    @JsonProperty(Vocabulary.s_p_hasContentType)
    protected Set<String> hasContentType;
    /**
     * Reason for the request (optional)
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasDescription)
    @JsonProperty(Vocabulary.s_p_hasDescription)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String hasDescription;
    /**
     * The Logistics Object type or specific Logistics Object to which the subscription belongs to e.g. https://onerecord.iata.org/Piece or https://1r.example.com/7f01363f-0c6a-4414-be48-d3692e219b91
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasTopic)
    @JsonProperty(Vocabulary.s_p_hasTopic)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#anyURI", min = 1, max = 1)
    })
    protected URI hasTopic;
    /**
     * Flag specifying if the requestor wants to receive Notification from the publisher when the status of an action request changed, default=FALSE
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_notifyRequestStatusChange)
    @JsonProperty(Vocabulary.s_p_notifyRequestStatusChange)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", min = 1, max = 1)
    })
    protected Set<String> notifyRequestStatusChange;
    /**
     * Flag specifying if the publisher should send the whole logistics object or not in the notification object
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_sendLogisticsObjectBody)
    @JsonProperty(Vocabulary.s_p_sendLogisticsObjectBody)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> sendLogisticsObjectBody;
    /**
     * Flag specifying if the subscriber wants to receive Notification from the publisher when LogisticsEvents for a Logistics Object are received, default=FALSE
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_subscribeToLogisticsEvents)
    @JsonProperty(Vocabulary.s_p_subscribeToLogisticsEvents)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#boolean", max = 1)
    })
    protected Boolean subscribeToLogisticsEvents;

    public void setId(String id) {
        this.id = id;
    }

    public String getId() {
        return id;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getDescription() {
        return description;
    }

    public void setTypes(Set<String> types) {
        this.types = types;
    }

    public Set<String> getTypes() {
        return types;
    }

    public void setProperties(Map<String, Set<String>> properties) {
        this.properties = properties;
    }

    public Map<String, Set<String>> getProperties() {
        return properties;
    }

    @Override
    public String toString() {
        return ((((("Subscription {"+ name)+"<")+ id)+">")+"}");
    }

    public void setHasSubscriber(Organization hasSubscriber) {
        this.hasSubscriber = hasSubscriber;
    }

    public Organization getHasSubscriber() {
        return hasSubscriber;
    }

    public void setHasTopicType(TopicType hasTopicType) {
        this.hasTopicType = hasTopicType;
    }

    public TopicType getHasTopicType() {
        return hasTopicType;
    }

    public void setExpiresAt(OffsetDateTime expiresAt) {
        this.expiresAt = expiresAt;
    }

    public OffsetDateTime getExpiresAt() {
        return expiresAt;
    }

    public void setHasContentType(Set<String> hasContentType) {
        this.hasContentType = hasContentType;
    }

    public Set<String> getHasContentType() {
        return hasContentType;
    }

    public void setHasDescription(String hasDescription) {
        this.hasDescription = hasDescription;
    }

    public String getHasDescription() {
        return hasDescription;
    }

    public void setHasTopic(URI hasTopic) {
        this.hasTopic = hasTopic;
    }

    public URI getHasTopic() {
        return hasTopic;
    }

    public void setNotifyRequestStatusChange(Set<String> notifyRequestStatusChange) {
        this.notifyRequestStatusChange = notifyRequestStatusChange;
    }

    public Set<String> getNotifyRequestStatusChange() {
        return notifyRequestStatusChange;
    }

    public void setSendLogisticsObjectBody(Set<String> sendLogisticsObjectBody) {
        this.sendLogisticsObjectBody = sendLogisticsObjectBody;
    }

    public Set<String> getSendLogisticsObjectBody() {
        return sendLogisticsObjectBody;
    }

    public void setSubscribeToLogisticsEvents(Boolean subscribeToLogisticsEvents) {
        this.subscribeToLogisticsEvents = subscribeToLogisticsEvents;
    }

    public Boolean getSubscribeToLogisticsEvents() {
        return subscribeToLogisticsEvents;
    }

}
