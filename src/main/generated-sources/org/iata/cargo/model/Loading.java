
package org.iata.cargo.model;

import java.io.Serializable;
import java.util.Set;
import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLDataProperty;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraint;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;
import org.iata.cargo.Vocabulary;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * Action to describe onloading or offloading TransportMeans
 * 
 * This class was generated by OWL2Java 0.20.2
 * 
 */
@OWLClass(iri = Vocabulary.s_c_Loading)
public class Loading
    extends LogisticsAction
    implements Serializable
{

    /**
     * References to Materials onloaded or offloaded
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_loadsLoadingMaterial)
@JsonProperty(Vocabulary.s_p_loadsLoadingMaterial)
    protected Set<LoadingMaterial> loadsLoadingMaterial;
    /**
     * References to LoadingUnits onloaded or offloaded
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_loadsLoadingUnit)
@JsonProperty(Vocabulary.s_p_loadsLoadingUnit)
    protected Set<LoadingUnit> loadsLoadingUnit;
    /**
     * Reference to the TransportMeans that is being onloaded or offloaded
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_loadsOnTransportMeans)
@JsonProperty(Vocabulary.s_p_loadsOnTransportMeans)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_TransportMeans, max = 1)
    })
    protected Set<Thing> loadsOnTransportMeans;
    /**
     * References to Pieces onloaded or offloaded
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_loadsPiece)
@JsonProperty(Vocabulary.s_p_loadsPiece)
    protected Set<Piece> loadsPiece;
    /**
     * Short text stating the loading position in the TransportMeans
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasLoadingPositionIdentifier)
@JsonProperty(Vocabulary.s_p_hasLoadingPositionIdentifier)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasLoadingPositionIdentifier;
    /**
     * Enum stating whether the LoadingAction describes onloading or offloading
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_isOfLoadingType)
@JsonProperty(Vocabulary.s_p_isOfLoadingType)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> isOfLoadingType;

    public void setLoadsLoadingMaterial(Set<LoadingMaterial> loadsLoadingMaterial) {
        this.loadsLoadingMaterial = loadsLoadingMaterial;
    }

    public Set<LoadingMaterial> getLoadsLoadingMaterial() {
        return loadsLoadingMaterial;
    }

    public void setLoadsLoadingUnit(Set<LoadingUnit> loadsLoadingUnit) {
        this.loadsLoadingUnit = loadsLoadingUnit;
    }

    public Set<LoadingUnit> getLoadsLoadingUnit() {
        return loadsLoadingUnit;
    }

    public void setLoadsOnTransportMeans(Set<Thing> loadsOnTransportMeans) {
        this.loadsOnTransportMeans = loadsOnTransportMeans;
    }

    public Set<Thing> getLoadsOnTransportMeans() {
        return loadsOnTransportMeans;
    }

    public void setLoadsPiece(Set<Piece> loadsPiece) {
        this.loadsPiece = loadsPiece;
    }

    public Set<Piece> getLoadsPiece() {
        return loadsPiece;
    }

    public void setHasLoadingPositionIdentifier(Set<String> hasLoadingPositionIdentifier) {
        this.hasLoadingPositionIdentifier = hasLoadingPositionIdentifier;
    }

    public Set<String> getHasLoadingPositionIdentifier() {
        return hasLoadingPositionIdentifier;
    }

    public void setIsOfLoadingType(Set<String> isOfLoadingType) {
        this.isOfLoadingType = isOfLoadingType;
    }

    public Set<String> getIsOfLoadingType() {
        return isOfLoadingType;
    }

}
