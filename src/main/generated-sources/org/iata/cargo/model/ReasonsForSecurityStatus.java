
package org.iata.cargo.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import cz.cvut.kbss.jopa.model.annotations.Id;
import cz.cvut.kbss.jopa.model.annotations.OWLAnnotationProperty;
import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLDataProperty;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.Properties;
import cz.cvut.kbss.jopa.model.annotations.Types;
import cz.cvut.kbss.jopa.vocabulary.RDFS;
import org.iata.cargo.Vocabulary;

import java.io.Serializable;
import java.util.Map;
import java.util.Set;


/**
 * Security status details
 * 
 * This class was generated by OWL2Java 0.14.2
 * 
 */
@OWLClass(iri = Vocabulary.s_c_ReasonsForSecurityStatus)
public class ReasonsForSecurityStatus
    implements Serializable
{

    @Id(generated = true)
@JsonProperty("@id")
    protected String id;
    @JsonIgnore
    @OWLAnnotationProperty(iri = RDFS.LABEL)
    protected String name;
    @JsonIgnore
    @OWLAnnotationProperty(iri = cz.cvut.kbss.jopa.vocabulary.DC.Elements.DESCRIPTION)
    protected String description;
    @Types
@JsonProperty("@type")
    protected Set<String> types;
    @Properties
    @JsonIgnore
    protected Map<String, Set<String>> properties;
    /**
     * Known Consignor or Regulated Agent reference
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_receivedFrom)
    protected Set<ReceivedFrom> receivedFrom;
    /**
     * Exemption code - e.g. BIOM- Bio-Medical Samples 
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_groundsForExemption)
    protected Set<String> groundsForExemption;
    /**
     * Other methods used to secure the cargo
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_otherScreeningMethods)
    protected Set<String> otherScreeningMethods;
    /**
     * Screening methods which have been used to secure the cargo - e.g. EDS- Explosive Detection System 
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_screeningMethod)
    protected Set<String> screeningMethod;

    public void setId(String id) {
        this.id = id;
    }

    public String getId() {
        return id;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getDescription() {
        return description;
    }

    public void setTypes(Set<String> types) {
        this.types = types;
    }

    public Set<String> getTypes() {
        return types;
    }

    public void setProperties(Map<String, Set<String>> properties) {
        this.properties = properties;
    }

    public Map<String, Set<String>> getProperties() {
        return properties;
    }

    @Override
    public String toString() {
        return ((((("ReasonsForSecurityStatus {"+ name)+"<")+ id)+">")+"}");
    }

    public void setReceivedFrom(Set<ReceivedFrom> receivedFrom) {
        this.receivedFrom = receivedFrom;
    }

    public Set<ReceivedFrom> getReceivedFrom() {
        return receivedFrom;
    }

    public void setGroundsForExemption(Set<String> groundsForExemption) {
        this.groundsForExemption = groundsForExemption;
    }

    public Set<String> getGroundsForExemption() {
        return groundsForExemption;
    }

    public void setOtherScreeningMethods(Set<String> otherScreeningMethods) {
        this.otherScreeningMethods = otherScreeningMethods;
    }

    public Set<String> getOtherScreeningMethods() {
        return otherScreeningMethods;
    }

    public void setScreeningMethod(Set<String> screeningMethod) {
        this.screeningMethod = screeningMethod;
    }

    public Set<String> getScreeningMethod() {
        return screeningMethod;
    }

}
