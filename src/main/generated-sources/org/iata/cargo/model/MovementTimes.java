
package org.iata.cargo.model;

import java.io.Serializable;
import java.time.OffsetDateTime;
import java.util.Map;
import java.util.Set;
import cz.cvut.kbss.jopa.model.annotations.Id;
import cz.cvut.kbss.jopa.model.annotations.OWLAnnotationProperty;
import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLDataProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraint;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;
import cz.cvut.kbss.jopa.model.annotations.Properties;
import cz.cvut.kbss.jopa.model.annotations.Types;
import cz.cvut.kbss.jopa.vocabulary.RDFS;
import org.iata.cargo.Vocabulary;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * Times refering to Transport Movements, used to describe specfic times such as Actual Departure time, etc.
 * 
 * This class was generated by OWL2Java 0.20.2
 * 
 */
@OWLClass(iri = Vocabulary.s_c_MovementTimes)
public class MovementTimes
    implements Serializable
{

    @Id(generated = true)
@JsonProperty("@id")
    protected String id;
    @OWLAnnotationProperty(iri = RDFS.LABEL)
@JsonIgnore
    protected String name;
    @OWLAnnotationProperty(iri = cz.cvut.kbss.jopa.vocabulary.DC.Elements.DESCRIPTION)
@JsonIgnore
    protected String description;
    @Types
@JsonProperty("@type")
    protected Set<String> types;
    @Properties
@JsonIgnore
    protected Map<String, Set<String>> properties;
    /**
     * Direction to indicate if it's Inbound or Outbound
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasDirection)
@JsonProperty(Vocabulary.s_p_hasDirection)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasDirection;
    /**
     * The milestone list still needs to be defined, it includes elements from CXML Code List 1.92 but is not limited to those values, e.g. block-on and block-off times might be added as a comparison to wheels off and touchdown.
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasMilestone)
@JsonProperty(Vocabulary.s_p_hasMilestone)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String hasMilestone;
    /**
     * Timestamp (date and time) of the movement time. If the movement time is recorded asynchronously, the timestamp should reflect the actual time, not when the data was created.
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasTimestamp)
@JsonProperty(Vocabulary.s_p_hasTimestamp)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#dateTime", max = 1)
    })
    protected OffsetDateTime hasTimestamp;
    /**
     * The type of time can be Actual, Estimated ot Scheduled
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_isOfTimeType)
@JsonProperty(Vocabulary.s_p_isOfTimeType)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> isOfTimeType;

    public void setId(String id) {
        this.id = id;
    }

    public String getId() {
        return id;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getDescription() {
        return description;
    }

    public void setTypes(Set<String> types) {
        this.types = types;
    }

    public Set<String> getTypes() {
        return types;
    }

    public void setProperties(Map<String, Set<String>> properties) {
        this.properties = properties;
    }

    public Map<String, Set<String>> getProperties() {
        return properties;
    }

    @Override
    public String toString() {
        return ((((("MovementTimes {"+ name)+"<")+ id)+">")+"}");
    }

    public void setHasDirection(Set<String> hasDirection) {
        this.hasDirection = hasDirection;
    }

    public Set<String> getHasDirection() {
        return hasDirection;
    }

    public void setHasMilestone(String hasMilestone) {
        this.hasMilestone = hasMilestone;
    }

    public String getHasMilestone() {
        return hasMilestone;
    }

    public void setHasTimestamp(OffsetDateTime hasTimestamp) {
        this.hasTimestamp = hasTimestamp;
    }

    public OffsetDateTime getHasTimestamp() {
        return hasTimestamp;
    }

    public void setIsOfTimeType(Set<String> isOfTimeType) {
        this.isOfTimeType = isOfTimeType;
    }

    public Set<String> getIsOfTimeType() {
        return isOfTimeType;
    }

}
