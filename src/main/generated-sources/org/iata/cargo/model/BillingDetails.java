
package org.iata.cargo.model;

import java.io.Serializable;
import java.time.OffsetDateTime;
import java.util.Set;
import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLDataProperty;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraint;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;
import org.iata.cargo.Vocabulary;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * In the context of CASS2.0 process, BillingDetails object is used to integrate specific Billing and Settlement data requirements
 * 
 * This class was generated by OWL2Java 0.20.2
 * 
 */
@OWLClass(iri = Vocabulary.s_c_BillingDetails)
public class BillingDetails
    extends LogisticsObject
    implements Serializable
{

    /**
     * Reference to the Waybill
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_detailsBillingOfWaybill)
@JsonProperty(Vocabulary.s_p_detailsBillingOfWaybill)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Waybill, max = 1)
    })
    protected Waybill detailsBillingOfWaybill;
    /**
     * Information about Adjustments performed on the BillingDetails
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_hasAdjustment)
@JsonProperty(Vocabulary.s_p_hasAdjustment)
    protected Set<Adjustments> hasAdjustment;
    /**
     * Tax due Agent (VAT/GST on Commission). Total VAT/TAX amount payable by airline to agent
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_hasTaxDueAgent)
@JsonProperty(Vocabulary.s_p_hasTaxDueAgent)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Value, max = 1)
    })
    protected Value hasTaxDueAgent;
    /**
     * Tax due Airline (as per AWB, or VAT/GST as per invoice). Total VAT/TAX amount payable by agent to airline
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_hasTaxDueAirline)
@JsonProperty(Vocabulary.s_p_hasTaxDueAirline)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Value, max = 1)
    })
    protected Set<Thing> hasTaxDueAirline;
    /**
     * The Date AWB Acceptance should be the same as the Date AWB Delivery. (beginning of the process)
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasAwbAcceptanceDate)
@JsonProperty(Vocabulary.s_p_hasAwbAcceptanceDate)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#dateTime", max = 1)
    })
    protected OffsetDateTime hasAwbAcceptanceDate;
    /**
     * The Date AWB Delivery is also used as the AWB Execution date which will determine which billing period it will be processed and billed in.
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasAwbDeliveryDate)
@JsonProperty(Vocabulary.s_p_hasAwbDeliveryDate)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasAwbDeliveryDate;
    /**
     * The AWB execution date determines which billing period the document will be processed and billed in.
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasAwbExecutionDate)
@JsonProperty(Vocabulary.s_p_hasAwbExecutionDate)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#dateTime", max = 1)
    })
    protected OffsetDateTime hasAwbExecutionDate;
    /**
     * It must either contain the values of R for Revenue AWB, V for Void AWB or S for Service AWB.
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasAwbUseIndicator)
@JsonProperty(Vocabulary.s_p_hasAwbUseIndicator)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasAwbUseIndicator;
    /**
     * The commission amount in favour of the Cargo Agent/Associate, applicable for the shipment concerned
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasCommissionAmount)
@JsonProperty(Vocabulary.s_p_hasCommissionAmount)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#double", max = 1)
    })
    protected Double hasCommissionAmount;
    /**
     * Indicates if commission is applied. Boolean
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasCommissionAmountIndicator)
@JsonProperty(Vocabulary.s_p_hasCommissionAmountIndicator)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasCommissionAmountIndicator;
    /**
     * The commission percentage in favour of the Cargo Agent/Associate, applicable for the shipment concerned
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasCommissionAmountPercentage)
@JsonProperty(Vocabulary.s_p_hasCommissionAmountPercentage)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasCommissionAmountPercentage;
    /**
     * Number of corrections to CASS records
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasCorrections)
@JsonProperty(Vocabulary.s_p_hasCorrections)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#integer", max = 1)
    })
    protected Integer hasCorrections;
    /**
     * This is used as a discount to the “official” transportation charge on AWB to arrive at actual selling price
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasDiscount)
@JsonProperty(Vocabulary.s_p_hasDiscount)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasDiscount;
    /**
     * The Rate at which the Air Waybill Amount has been multiplied to arrive at the amount of settlement.
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasExchangeRate)
@JsonProperty(Vocabulary.s_p_hasExchangeRate)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasExchangeRate;
    /**
     * Indicate if subject to VAT (boolean)
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasVatIndicator)
@JsonProperty(Vocabulary.s_p_hasVatIndicator)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#boolean", max = 1)
    })
    protected Boolean hasVatIndicator;

    public void setDetailsBillingOfWaybill(Waybill detailsBillingOfWaybill) {
        this.detailsBillingOfWaybill = detailsBillingOfWaybill;
    }

    public Waybill getDetailsBillingOfWaybill() {
        return detailsBillingOfWaybill;
    }

    public void setHasAdjustment(Set<Adjustments> hasAdjustment) {
        this.hasAdjustment = hasAdjustment;
    }

    public Set<Adjustments> getHasAdjustment() {
        return hasAdjustment;
    }

    public void setHasTaxDueAgent(Value hasTaxDueAgent) {
        this.hasTaxDueAgent = hasTaxDueAgent;
    }

    public Value getHasTaxDueAgent() {
        return hasTaxDueAgent;
    }

    public void setHasTaxDueAirline(Set<Thing> hasTaxDueAirline) {
        this.hasTaxDueAirline = hasTaxDueAirline;
    }

    public Set<Thing> getHasTaxDueAirline() {
        return hasTaxDueAirline;
    }

    public void setHasAwbAcceptanceDate(OffsetDateTime hasAwbAcceptanceDate) {
        this.hasAwbAcceptanceDate = hasAwbAcceptanceDate;
    }

    public OffsetDateTime getHasAwbAcceptanceDate() {
        return hasAwbAcceptanceDate;
    }

    public void setHasAwbDeliveryDate(Set<String> hasAwbDeliveryDate) {
        this.hasAwbDeliveryDate = hasAwbDeliveryDate;
    }

    public Set<String> getHasAwbDeliveryDate() {
        return hasAwbDeliveryDate;
    }

    public void setHasAwbExecutionDate(OffsetDateTime hasAwbExecutionDate) {
        this.hasAwbExecutionDate = hasAwbExecutionDate;
    }

    public OffsetDateTime getHasAwbExecutionDate() {
        return hasAwbExecutionDate;
    }

    public void setHasAwbUseIndicator(Set<String> hasAwbUseIndicator) {
        this.hasAwbUseIndicator = hasAwbUseIndicator;
    }

    public Set<String> getHasAwbUseIndicator() {
        return hasAwbUseIndicator;
    }

    public void setHasCommissionAmount(Double hasCommissionAmount) {
        this.hasCommissionAmount = hasCommissionAmount;
    }

    public Double getHasCommissionAmount() {
        return hasCommissionAmount;
    }

    public void setHasCommissionAmountIndicator(Set<String> hasCommissionAmountIndicator) {
        this.hasCommissionAmountIndicator = hasCommissionAmountIndicator;
    }

    public Set<String> getHasCommissionAmountIndicator() {
        return hasCommissionAmountIndicator;
    }

    public void setHasCommissionAmountPercentage(Set<String> hasCommissionAmountPercentage) {
        this.hasCommissionAmountPercentage = hasCommissionAmountPercentage;
    }

    public Set<String> getHasCommissionAmountPercentage() {
        return hasCommissionAmountPercentage;
    }

    public void setHasCorrections(Integer hasCorrections) {
        this.hasCorrections = hasCorrections;
    }

    public Integer getHasCorrections() {
        return hasCorrections;
    }

    public void setHasDiscount(Set<String> hasDiscount) {
        this.hasDiscount = hasDiscount;
    }

    public Set<String> getHasDiscount() {
        return hasDiscount;
    }

    public void setHasExchangeRate(Set<String> hasExchangeRate) {
        this.hasExchangeRate = hasExchangeRate;
    }

    public Set<String> getHasExchangeRate() {
        return hasExchangeRate;
    }

    public void setHasVatIndicator(Boolean hasVatIndicator) {
        this.hasVatIndicator = hasVatIndicator;
    }

    public Boolean getHasVatIndicator() {
        return hasVatIndicator;
    }

}
