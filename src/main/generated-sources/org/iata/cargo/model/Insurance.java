
package org.iata.cargo.model;

import java.io.Serializable;
import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraint;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;
import org.iata.cargo.Vocabulary;


/**
 * Insurance details
 * 
 * This class was generated by OWL2Java 0.16.4
 * 
 */
@OWLClass(iri = Vocabulary.s_c_Insurance)
public class Insurance
    extends LogisticsObject
    implements Serializable
{

    /**
     * Party covering the insurance 
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_coveringParty)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected Company coveringParty;
    /**
     * Insured amount - amount covered by the insurance policy
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_insuranceAmount)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected Value insuranceAmount;
    /**
     * Reference to the shipment insured
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_insuranceShipment)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, min = 1, max = -1),
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected Shipment insuranceShipment;

    public void setCoveringParty(Company coveringParty) {
        this.coveringParty = coveringParty;
    }

    public Company getCoveringParty() {
        return coveringParty;
    }

    public void setInsuranceAmount(Value insuranceAmount) {
        this.insuranceAmount = insuranceAmount;
    }

    public Value getInsuranceAmount() {
        return insuranceAmount;
    }

    public void setInsuranceShipment(Shipment insuranceShipment) {
        this.insuranceShipment = insuranceShipment;
    }

    public Shipment getInsuranceShipment() {
        return insuranceShipment;
    }

}
