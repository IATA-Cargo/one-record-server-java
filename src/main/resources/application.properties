spring.application.name=onerecord

server.port=8443
# The following keystore holds the server side SSL certificate and its corresponding private key. NOTE that in a production environment the following file shouldn't be under version control.
server.ssl.key-store=classpath:keystore.jks
server.ssl.key-store-password=secret
# The following truststore holds the CAs allowed to issue client certificates that could be used to authenticate against this server.
server.ssl.trust-store=classpath:truststore.jks
server.ssl.trust-store-password=changeit
# 'need' makes a SSL client certificate required, but this property can be changed to 'want' to make it optional.
server.ssl.client-auth=need

spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.username=
spring.data.mongodb.password=
spring.data.mongodb.database=mydb

companyInformation.companyId=http://localhost:8080
companyInformation.supportedLogisticsObjects=AirwayBill,Booking
companyInformation.supportedContentTypes=application/ld+json
companyInformation.serverEndpoint=http://localhost:8080

subscription.callbackUrl=http://localhost:8080/callback
subscription.secret=udgcjxgyurefxmnkfuireytukjfegijgkh
subscription.subscribeToStatusUpdates=true
subscription.sendLogisticsObjectBody=false
subscription.cacheFor=86400
