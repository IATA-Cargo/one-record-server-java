
package org.iata.cargo.model;

import java.io.Serializable;
import java.util.Set;
import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLDataProperty;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraint;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;
import org.iata.cargo.Vocabulary;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * Dangerous Goods subtype of Piece
 * 
 * This class was generated by OWL2Java 0.20.2
 * 
 */
@OWLClass(iri = Vocabulary.s_c_PieceDg)
public class PieceDg
    extends Piece
    implements Serializable
{

    /**
     * Reference to the Dangerous Goods declaration
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_hasDgDeclaration)
@JsonProperty(Vocabulary.s_p_hasDgDeclaration)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_DgDeclaration, max = 1)
    })
    protected Set<Thing> hasDgDeclaration;
    /**
     * Applies to fissile material only, other than fissile excepted. A numeric value expressed to one decimal place preceded by the letters CSI. 
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasOverpackCriticalitySafetyIndexNumeric)
@JsonProperty(Vocabulary.s_p_hasOverpackCriticalitySafetyIndexNumeric)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasOverpackCriticalitySafetyIndexNumeric;
    /**
     * A single number assigned to a package, overpack or freight container to provide control over radiation exposure. 
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasOverpackT1)
@JsonProperty(Vocabulary.s_p_hasOverpackT1)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#boolean", max = 1)
    })
    protected Boolean hasOverpackT1;
    /**
     * Identifies the Logistic Unit package type. UN Recommendation on Transport of Dangerous Goods, Model Regulations 
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasOverpackTypeCode)
@JsonProperty(Vocabulary.s_p_hasOverpackTypeCode)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#boolean", max = 1)
    })
    protected Boolean hasOverpackTypeCode;
    /**
     * Most instances of all packed in one will require the addition of the Q value which  1. Applies to air transport only. (Air)  
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasQValueNumeric)
@JsonProperty(Vocabulary.s_p_hasQValueNumeric)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> hasQValueNumeric;
    /**
     * A statement identifying that the dangerous goods listed above are all contained in the same outer packaging. Takes the form All packed in one aaaa (description of packaging type) x nn (number of packages). Applies to air transport only. (Air) 
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_isAllPackedInOne)
@JsonProperty(Vocabulary.s_p_isAllPackedInOne)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> isAllPackedInOne;
    /**
     * Overpack indicator 
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_isOverpack)
@JsonProperty(Vocabulary.s_p_isOverpack)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral", max = 1)
    })
    protected Set<String> isOverpack;

    public void setHasDgDeclaration(Set<Thing> hasDgDeclaration) {
        this.hasDgDeclaration = hasDgDeclaration;
    }

    public Set<Thing> getHasDgDeclaration() {
        return hasDgDeclaration;
    }

    public void setHasOverpackCriticalitySafetyIndexNumeric(Set<String> hasOverpackCriticalitySafetyIndexNumeric) {
        this.hasOverpackCriticalitySafetyIndexNumeric = hasOverpackCriticalitySafetyIndexNumeric;
    }

    public Set<String> getHasOverpackCriticalitySafetyIndexNumeric() {
        return hasOverpackCriticalitySafetyIndexNumeric;
    }

    public void setHasOverpackT1(Boolean hasOverpackT1) {
        this.hasOverpackT1 = hasOverpackT1;
    }

    public Boolean getHasOverpackT1() {
        return hasOverpackT1;
    }

    public void setHasOverpackTypeCode(Boolean hasOverpackTypeCode) {
        this.hasOverpackTypeCode = hasOverpackTypeCode;
    }

    public Boolean getHasOverpackTypeCode() {
        return hasOverpackTypeCode;
    }

    public void setHasQValueNumeric(Set<String> hasQValueNumeric) {
        this.hasQValueNumeric = hasQValueNumeric;
    }

    public Set<String> getHasQValueNumeric() {
        return hasQValueNumeric;
    }

    public void setIsAllPackedInOne(Set<String> isAllPackedInOne) {
        this.isAllPackedInOne = isAllPackedInOne;
    }

    public Set<String> getIsAllPackedInOne() {
        return isAllPackedInOne;
    }

    public void setIsOverpack(Set<String> isOverpack) {
        this.isOverpack = isOverpack;
    }

    public Set<String> getIsOverpack() {
        return isOverpack;
    }

}
