
package org.iata.api;

import org.semanticweb.owlapi.model.IRI;


/**
 * This class was generated by OWL2Java 0.20.2
 * 
 */
public class Vocabulary {

    public final static String ONTOLOGY_IRI_api = "https://onerecord.iata.org/ns/api";
    public final static String ONTOLOGY_IRI_api_generated = "https://onerecord.iata.org/ns/api-generated";
    public final static String s_c_Thing = "http://www.w3.org/2002/07/owl#Thing";
    public final static IRI c_Thing = IRI.create(s_c_Thing);
    /**
     * Access to a Logistics Object delegated to an Organization
     * 
     */
    public final static String s_c_AccessDelegation = "https://onerecord.iata.org/ns/api#AccessDelegation";
    public final static IRI c_AccessDelegation = IRI.create(s_c_AccessDelegation);
    /**
     * Delegation Request to 3rd parties
     * 
     */
    public final static String s_c_AccessDelegationRequest = "https://onerecord.iata.org/ns/api#AccessDelegationRequest";
    public final static IRI c_AccessDelegationRequest = IRI.create(s_c_AccessDelegationRequest);
    /**
     * Superclass for all kinds of requests (i.e someone requsted something (e.g. subscription, access, etc.) at a publisher/owner of a logistics object)
     * 
     */
    public final static String s_c_ActionRequest = "https://onerecord.iata.org/ns/api#ActionRequest";
    public final static IRI c_ActionRequest = IRI.create(s_c_ActionRequest);
    /**
     * Audit trail of a Logistics Object
     * 
     */
    public final static String s_c_AuditTrail = "https://onerecord.iata.org/ns/api#AuditTrail";
    public final static IRI c_AuditTrail = IRI.create(s_c_AuditTrail);
    public final static String s_c_Change = "https://onerecord.iata.org/ns/api#Change";
    public final static IRI c_Change = IRI.create(s_c_Change);
    /**
     * Change Request containing updates on a Logistics Object
     * 
     */
    public final static String s_c_ChangeRequest = "https://onerecord.iata.org/ns/api#ChangeRequest";
    public final static IRI c_ChangeRequest = IRI.create(s_c_ChangeRequest);
    /**
     * Error model
     * 
     */
    public final static String s_c_Error = "https://onerecord.iata.org/ns/api#Error";
    public final static IRI c_Error = IRI.create(s_c_Error);
    /**
     * Error details that belong to an error
     * 
     */
    public final static String s_c_ErrorDetail = "https://onerecord.iata.org/ns/api#ErrorDetail";
    public final static IRI c_ErrorDetail = IRI.create(s_c_ErrorDetail);
    /**
     * Notification sent by the publisher to the subscriber
     * 
     */
    public final static String s_c_Notification = "https://onerecord.iata.org/ns/api#Notification";
    public final static IRI c_Notification = IRI.create(s_c_Notification);
    public final static String s_c_NotificationEventType = "https://onerecord.iata.org/ns/api#NotificationEventType";
    public final static IRI c_NotificationEventType = IRI.create(s_c_NotificationEventType);
    /**
     * Operation Request contained in the PATCH body
     * 
     */
    public final static String s_c_Operation = "https://onerecord.iata.org/ns/api#Operation";
    public final static IRI c_Operation = IRI.create(s_c_Operation);
    /**
     * Object to modify in the PATCH request
     * 
     */
    public final static String s_c_OperationObject = "https://onerecord.iata.org/ns/api#OperationObject";
    public final static IRI c_OperationObject = IRI.create(s_c_OperationObject);
    public final static String s_c_PatchOperation = "https://onerecord.iata.org/ns/api#PatchOperation";
    public final static IRI c_PatchOperation = IRI.create(s_c_PatchOperation);
    public final static String s_c_Permission = "https://onerecord.iata.org/ns/api#Permission";
    public final static IRI c_Permission = IRI.create(s_c_Permission);
    public final static String s_c_RequestStatus = "https://onerecord.iata.org/ns/api#RequestStatus";
    public final static IRI c_RequestStatus = IRI.create(s_c_RequestStatus);
    /**
     * Information about the ONE Record server in the Internet of Logistics
     * 
     */
    public final static String s_c_ServerInformation = "https://onerecord.iata.org/ns/api#ServerInformation";
    public final static IRI c_ServerInformation = IRI.create(s_c_ServerInformation);
    /**
     * Subscription information sent to the publisher
     * 
     */
    public final static String s_c_Subscription = "https://onerecord.iata.org/ns/api#Subscription";
    public final static IRI c_Subscription = IRI.create(s_c_Subscription);
    /**
     * SubscriptionRequest initiated by subscribers to publisher (data owner) for themselves or for a third party subscriber.
     * 
     */
    public final static String s_c_SubscriptionRequest = "https://onerecord.iata.org/ns/api#SubscriptionRequest";
    public final static IRI c_SubscriptionRequest = IRI.create(s_c_SubscriptionRequest);
    public final static String s_c_TopicType = "https://onerecord.iata.org/ns/api#TopicType";
    public final static IRI c_TopicType = IRI.create(s_c_TopicType);
    public final static String s_c_LogisticsObject = "https://onerecord.iata.org/ns/cargo/LogisticsObject";
    public final static IRI c_LogisticsObject = IRI.create(s_c_LogisticsObject);
    public final static String s_c_Organization = "https://onerecord.iata.org/ns/cargo/Organization";
    public final static IRI c_Organization = IRI.create(s_c_Organization);
    public final static String s_p_topObjectProperty = "http://www.w3.org/2002/07/owl#topObjectProperty";
    public final static IRI p_topObjectProperty = IRI.create(s_p_topObjectProperty);
    public final static String s_p_hasAccessDelegation = "https://onerecord.iata.org/ns/api#hasAccessDelegation";
    public final static IRI p_hasAccessDelegation = IRI.create(s_p_hasAccessDelegation);
    /**
     * Contains submitted Change object
     * 
     */
    public final static String s_p_hasChange = "https://onerecord.iata.org/ns/api#hasChange";
    public final static IRI p_hasChange = IRI.create(s_p_hasChange);
    /**
     * Recorded change requests in the Audit Trail of a Logistics Object
     * 
     */
    public final static String s_p_hasChangeRequest = "https://onerecord.iata.org/ns/api#hasChangeRequest";
    public final static IRI p_hasChangeRequest = IRI.create(s_p_hasChangeRequest);
    /**
     * The data owner of the servers data.
     * 
     */
    public final static String s_p_hasDataOwner = "https://onerecord.iata.org/ns/api#hasDataOwner";
    public final static IRI p_hasDataOwner = IRI.create(s_p_hasDataOwner);
    /**
     * Error object(s) if the processing was not successful
     * 
     */
    public final static String s_p_hasError = "https://onerecord.iata.org/ns/api#hasError";
    public final static IRI p_hasError = IRI.create(s_p_hasError);
    /**
     * Error details
     * 
     */
    public final static String s_p_hasErrorDetail = "https://onerecord.iata.org/ns/api#hasErrorDetail";
    public final static IRI p_hasErrorDetail = IRI.create(s_p_hasErrorDetail);
    public final static String s_p_hasEventType = "https://onerecord.iata.org/ns/api#hasEventType";
    public final static IRI p_hasEventType = IRI.create(s_p_hasEventType);
    /**
     * A reference to a cargo:LogisticsObject.
     * 
     */
    public final static String s_p_hasLogisticsObject = "https://onerecord.iata.org/ns/api#hasLogisticsObject";
    public final static IRI p_hasLogisticsObject = IRI.create(s_p_hasLogisticsObject);
    /**
     * Operation(s) to apply as PATCH on a Logistics Object
     * 
     */
    public final static String s_p_hasOperation = "https://onerecord.iata.org/ns/api#hasOperation";
    public final static IRI p_hasOperation = IRI.create(s_p_hasOperation);
    public final static String s_p_hasPermission = "https://onerecord.iata.org/ns/api#hasPermission";
    public final static IRI p_hasPermission = IRI.create(s_p_hasPermission);
    /**
     * has Request Status
     * 
     */
    public final static String s_p_hasRequestStatus = "https://onerecord.iata.org/ns/api#hasRequestStatus";
    public final static IRI p_hasRequestStatus = IRI.create(s_p_hasRequestStatus);
    public final static String s_p_hasSubscriber = "https://onerecord.iata.org/ns/api#hasSubscriber";
    public final static IRI p_hasSubscriber = IRI.create(s_p_hasSubscriber);
    /**
     * Link to the requestors Subscription object with all subscription information
     * 
     */
    public final static String s_p_hasSubscription = "https://onerecord.iata.org/ns/api#hasSubscription";
    public final static IRI p_hasSubscription = IRI.create(s_p_hasSubscription);
    public final static String s_p_hasTopicType = "https://onerecord.iata.org/ns/api#hasTopicType";
    public final static IRI p_hasTopicType = IRI.create(s_p_hasTopicType);
    /**
     * Organization Identifier that represents the Organization that has requested the action
     * 
     */
    public final static String s_p_isRequestedBy = "https://onerecord.iata.org/ns/api#isRequestedBy";
    public final static IRI p_isRequestedBy = IRI.create(s_p_isRequestedBy);
    public final static String s_p_isRequestedFor = "https://onerecord.iata.org/ns/api#isRequestedFor";
    public final static IRI p_isRequestedFor = IRI.create(s_p_isRequestedFor);
    public final static String s_p_isRevokedBy = "https://onerecord.iata.org/ns/api#isRevokedBy";
    public final static IRI p_isRevokedBy = IRI.create(s_p_isRevokedBy);
    /**
     * Optional URI to the ChangeRequest that triggered a Notification if the eventType is one of CHANGE_REQUEST_ACCEPTED, CHANGE_REQUEST_REJECT, or CHANGE_REQUEST_FAILED
     * 
     */
    public final static String s_p_isTriggeredBy = "https://onerecord.iata.org/ns/api#isTriggeredBy";
    public final static IRI p_isTriggeredBy = IRI.create(s_p_isTriggeredBy);
    public final static String s_p_o = "https://onerecord.iata.org/ns/api#o";
    public final static IRI p_o = IRI.create(s_p_o);
    public final static String s_p_op = "https://onerecord.iata.org/ns/api#op";
    public final static IRI p_op = IRI.create(s_p_op);
    /**
     * Expiry date as date time of the subscription information that supports caching but does not require the ONE Record client to store the datetime when the Subscription object was received; if not given: the information does not expire
     * 
     */
    public final static String s_p_expiresAt = "https://onerecord.iata.org/ns/api#expiresAt";
    public final static IRI p_expiresAt = IRI.create(s_p_expiresAt);
    /**
     * List of all changed properties as IRIs after a ChangeRequest was successfully applied, e.g. [https://onerecord.iata.org/ns/cargo/3.0.0#volumetricWeight, https://onerecord.iata.org/ns/cargo/3.0.0#goodsDescription]
     * 
     */
    public final static String s_p_hasChangedProperty = "https://onerecord.iata.org/ns/api#hasChangedProperty";
    public final static IRI p_hasChangedProperty = IRI.create(s_p_hasChangedProperty);
    /**
     * Error code is a numeric or alphanumeric code that can be used to determine the source of the error and why it occured.
     * 
     */
    public final static String s_p_hasCode = "https://onerecord.iata.org/ns/api#hasCode";
    public final static IRI p_hasCode = IRI.create(s_p_hasCode);
    /**
     * Content types that the subscriber wants to receive in the notifications, e.g. application/ld+json
     * 
     */
    public final static String s_p_hasContentType = "https://onerecord.iata.org/ns/api#hasContentType";
    public final static IRI p_hasContentType = IRI.create(s_p_hasContentType);
    /**
     * Data type of the field to update, must be a valid URI, e.g. http://www.w3.org/2001/XMLSchema#int
     * 
     */
    public final static String s_p_hasDatatype = "https://onerecord.iata.org/ns/api#hasDatatype";
    public final static IRI p_hasDatatype = IRI.create(s_p_hasDatatype);
    /**
     * Reason for the request (optional)
     * 
     */
    public final static String s_p_hasDescription = "https://onerecord.iata.org/ns/api#hasDescription";
    public final static IRI p_hasDescription = IRI.create(s_p_hasDescription);
    /**
     * Latest revision of the Logistics Object. Starting with revision 0
     * 
     */
    public final static String s_p_hasLatestRevision = "https://onerecord.iata.org/ns/api#hasLatestRevision";
    public final static IRI p_hasLatestRevision = IRI.create(s_p_hasLatestRevision);
    /**
     * Message that describes the error
     * 
     */
    public final static String s_p_hasMessage = "https://onerecord.iata.org/ns/api#hasMessage";
    public final static IRI p_hasMessage = IRI.create(s_p_hasMessage);
    /**
     * Property of the object for which the error applies in IRI format, i.e. https://onerecord.iata.org/ns/cargo/3.0.0#volumetricWeight
     * 
     */
    public final static String s_p_hasProperty = "https://onerecord.iata.org/ns/api#hasProperty";
    public final static IRI p_hasProperty = IRI.create(s_p_hasProperty);
    /**
     * URI of the object where the error occurred
     * 
     */
    public final static String s_p_hasResource = "https://onerecord.iata.org/ns/api#hasResource";
    public final static IRI p_hasResource = IRI.create(s_p_hasResource);
    /**
     * Revision number of the Logistics Object, starting with 0 for changing the initial revision of a Logistics Object
     * 
     */
    public final static String s_p_hasRevision = "https://onerecord.iata.org/ns/api#hasRevision";
    public final static IRI p_hasRevision = IRI.create(s_p_hasRevision);
    /**
     * ONE Record API endpoint in the Internet of Logistics
     * 
     */
    public final static String s_p_hasServerEndpoint = "https://onerecord.iata.org/ns/api#hasServerEndpoint";
    public final static IRI p_hasServerEndpoint = IRI.create(s_p_hasServerEndpoint);
    /**
     * Supported ONE Record API versions by the server, MUST include at least one supported version.
     * 
     */
    public final static String s_p_hasSupportedApiVersion = "https://onerecord.iata.org/ns/api#hasSupportedApiVersion";
    public final static IRI p_hasSupportedApiVersion = IRI.create(s_p_hasSupportedApiVersion);
    /**
     * Supported content types of the server, MUST contain at least application/ld+json
     * 
     */
    public final static String s_p_hasSupportedContentType = "https://onerecord.iata.org/ns/api#hasSupportedContentType";
    public final static IRI p_hasSupportedContentType = IRI.create(s_p_hasSupportedContentType);
    /**
     * Optional list of supported encodings of the ONE Record server, e.g. gzip
     * 
     */
    public final static String s_p_hasSupportedEncoding = "https://onerecord.iata.org/ns/api#hasSupportedEncoding";
    public final static IRI p_hasSupportedEncoding = IRI.create(s_p_hasSupportedEncoding);
    /**
     * Supported languages of the ONE Record API, minimum is en-US (American English)
     * 
     */
    public final static String s_p_hasSupportedLanguage = "https://onerecord.iata.org/ns/api#hasSupportedLanguage";
    public final static IRI p_hasSupportedLanguage = IRI.create(s_p_hasSupportedLanguage);
    /**
     * Supported logistics object types on the server
     * 
     */
    public final static String s_p_hasSupportedLogisticsObjectType = "https://onerecord.iata.org/ns/api#hasSupportedLogisticsObjectType";
    public final static IRI p_hasSupportedLogisticsObjectType = IRI.create(s_p_hasSupportedLogisticsObjectType);
    /**
     * Supported ontologies on the server, MUST be versioned IRIs
     * 
     */
    public final static String s_p_hasSupportedOntology = "https://onerecord.iata.org/ns/api#hasSupportedOntology";
    public final static IRI p_hasSupportedOntology = IRI.create(s_p_hasSupportedOntology);
    /**
     * Short summary of the error
     * 
     */
    public final static String s_p_hasTitle = "https://onerecord.iata.org/ns/api#hasTitle";
    public final static IRI p_hasTitle = IRI.create(s_p_hasTitle);
    /**
     * The Logistics Object type or specific Logistics Object to which the subscription belongs to e.g. https://onerecord.iata.org/Piece or https://1r.example.com/7f01363f-0c6a-4414-be48-d3692e219b91
     * 
     */
    public final static String s_p_hasTopic = "https://onerecord.iata.org/ns/api#hasTopic";
    public final static IRI p_hasTopic = IRI.create(s_p_hasTopic);
    /**
     * Updated value for the field
     * 
     */
    public final static String s_p_hasValue = "https://onerecord.iata.org/ns/api#hasValue";
    public final static IRI p_hasValue = IRI.create(s_p_hasValue);
    /**
     * Datetime when the request was created
     * 
     */
    public final static String s_p_isRequestedAt = "https://onerecord.iata.org/ns/api#isRequestedAt";
    public final static IRI p_isRequestedAt = IRI.create(s_p_isRequestedAt);
    /**
     * The datetime when the action request was revoked.
     * 
     */
    public final static String s_p_isRevokedAt = "https://onerecord.iata.org/ns/api#isRevokedAt";
    public final static IRI p_isRevokedAt = IRI.create(s_p_isRevokedAt);
    /**
     * Flag specifying if the requestor wants to receive Notification from the publisher when the status of an action request changed, default=FALSE
     * 
     */
    public final static String s_p_notifyRequestStatusChange = "https://onerecord.iata.org/ns/api#notifyRequestStatusChange";
    public final static IRI p_notifyRequestStatusChange = IRI.create(s_p_notifyRequestStatusChange);
    /**
     * Operations objects must have exactly one p, predicate, member. The value of this member must be an URI, e.g. https://onerecord.iata.org/ns/cargo/3.0.0#goodsDescription
     * 
     */
    public final static String s_p_p = "https://onerecord.iata.org/ns/api#p";
    public final static IRI p_p = IRI.create(s_p_p);
    /**
     * Operation objects MUST have exactly one "s", subject, member. The value of this member MUST be one of IRI or blank node.
     * 
     */
    public final static String s_p_s = "https://onerecord.iata.org/ns/api#s";
    public final static IRI p_s = IRI.create(s_p_s);
    /**
     * Flag specifying if the publisher should send the whole logistics object or not in the notification object
     * 
     */
    public final static String s_p_sendLogisticsObjectBody = "https://onerecord.iata.org/ns/api#sendLogisticsObjectBody";
    public final static IRI p_sendLogisticsObjectBody = IRI.create(s_p_sendLogisticsObjectBody);
    /**
     * Flag specifying if the subscriber wants to receive Notification from the publisher when LogisticsEvents for a Logistics Object are received, default=FALSE
     * 
     */
    public final static String s_p_subscribeToLogisticsEvents = "https://onerecord.iata.org/ns/api#subscribeToLogisticsEvents";
    public final static IRI p_subscribeToLogisticsEvents = IRI.create(s_p_subscribeToLogisticsEvents);
    public final static String s_p_description = "http://purl.org/dc/elements/1.1/description";
    public final static IRI p_description = IRI.create(s_p_description);
    public final static String s_p_title = "http://purl.org/dc/elements/1.1/title";
    public final static IRI p_title = IRI.create(s_p_title);
    public final static String s_p__abstract = "http://purl.org/dc/terms/abstract";
    public final static IRI p__abstract = IRI.create(s_p__abstract);
    public final static String s_p_modified = "http://purl.org/dc/terms/modified";
    public final static IRI p_modified = IRI.create(s_p_modified);
    public final static String s_p_title_A = "http://purl.org/dc/terms/title";
    public final static IRI p_title_A = IRI.create(s_p_title_A);
    public final static String s_p_comment = "http://www.w3.org/2000/01/rdf-schema#comment";
    public final static IRI p_comment = IRI.create(s_p_comment);
    public final static String s_p_label = "http://www.w3.org/2000/01/rdf-schema#label";
    public final static IRI p_label = IRI.create(s_p_label);
    public final static String s_p_seeAlso = "http://www.w3.org/2000/01/rdf-schema#seeAlso";
    public final static IRI p_seeAlso = IRI.create(s_p_seeAlso);
    public final static String s_p_maxCardinality = "http://www.w3.org/2002/07/owl#maxCardinality";
    public final static IRI p_maxCardinality = IRI.create(s_p_maxCardinality);
    public final static String s_p_maxQualifiedCardinality = "http://www.w3.org/2002/07/owl#maxQualifiedCardinality";
    public final static IRI p_maxQualifiedCardinality = IRI.create(s_p_maxQualifiedCardinality);
    public final static String s_p_minCardinality = "http://www.w3.org/2002/07/owl#minCardinality";
    public final static IRI p_minCardinality = IRI.create(s_p_minCardinality);
    public final static String s_p_minQualifiedCardinality = "http://www.w3.org/2002/07/owl#minQualifiedCardinality";
    public final static IRI p_minQualifiedCardinality = IRI.create(s_p_minQualifiedCardinality);
    public final static String s_i_ACCESS_DELEGATION_REQUEST_ACCEPTED = "https://onerecord.iata.org/ns/api#ACCESS_DELEGATION_REQUEST_ACCEPTED";
    public final static IRI i_ACCESS_DELEGATION_REQUEST_ACCEPTED = IRI.create(s_i_ACCESS_DELEGATION_REQUEST_ACCEPTED);
    public final static String s_i_ACCESS_DELEGATION_REQUEST_FAILED = "https://onerecord.iata.org/ns/api#ACCESS_DELEGATION_REQUEST_FAILED";
    public final static IRI i_ACCESS_DELEGATION_REQUEST_FAILED = IRI.create(s_i_ACCESS_DELEGATION_REQUEST_FAILED);
    public final static String s_i_ACCESS_DELEGATION_REQUEST_PENDING = "https://onerecord.iata.org/ns/api#ACCESS_DELEGATION_REQUEST_PENDING";
    public final static IRI i_ACCESS_DELEGATION_REQUEST_PENDING = IRI.create(s_i_ACCESS_DELEGATION_REQUEST_PENDING);
    public final static String s_i_ACCESS_DELEGATION_REQUEST_REJECTED = "https://onerecord.iata.org/ns/api#ACCESS_DELEGATION_REQUEST_REJECTED";
    public final static IRI i_ACCESS_DELEGATION_REQUEST_REJECTED = IRI.create(s_i_ACCESS_DELEGATION_REQUEST_REJECTED);
    public final static String s_i_ACCESS_DELEGATION_REQUEST_REVOKED = "https://onerecord.iata.org/ns/api#ACCESS_DELEGATION_REQUEST_REVOKED";
    public final static IRI i_ACCESS_DELEGATION_REQUEST_REVOKED = IRI.create(s_i_ACCESS_DELEGATION_REQUEST_REVOKED);
    /**
     * Defines a :PatchOperation to be an operation that adds new triples.
     * 
     */
    public final static String s_i_ADD = "https://onerecord.iata.org/ns/api#ADD";
    public final static IRI i_ADD = IRI.create(s_i_ADD);
    /**
     * :EventType for accepted :ChangeRequests
     * 
     */
    public final static String s_i_CHANGE_REQUEST_ACCEPTED = "https://onerecord.iata.org/ns/api#CHANGE_REQUEST_ACCEPTED";
    public final static IRI i_CHANGE_REQUEST_ACCEPTED = IRI.create(s_i_CHANGE_REQUEST_ACCEPTED);
    /**
     * :EventType for failed :ChangeRequests.
     * 
     */
    public final static String s_i_CHANGE_REQUEST_FAILED = "https://onerecord.iata.org/ns/api#CHANGE_REQUEST_FAILED";
    public final static IRI i_CHANGE_REQUEST_FAILED = IRI.create(s_i_CHANGE_REQUEST_FAILED);
    /**
     * :EventType for pending :ChangeRequests.
     * 
     */
    public final static String s_i_CHANGE_REQUEST_PENDING = "https://onerecord.iata.org/ns/api#CHANGE_REQUEST_PENDING";
    public final static IRI i_CHANGE_REQUEST_PENDING = IRI.create(s_i_CHANGE_REQUEST_PENDING);
    public final static String s_i_CHANGE_REQUEST_REJECTED = "https://onerecord.iata.org/ns/api#CHANGE_REQUEST_REJECTED";
    public final static IRI i_CHANGE_REQUEST_REJECTED = IRI.create(s_i_CHANGE_REQUEST_REJECTED);
    public final static String s_i_CHANGE_REQUEST_REVOKED = "https://onerecord.iata.org/ns/api#CHANGE_REQUEST_REVOKED";
    public final static IRI i_CHANGE_REQUEST_REVOKED = IRI.create(s_i_CHANGE_REQUEST_REVOKED);
    public final static String s_i_DELETE = "https://onerecord.iata.org/ns/api#DELETE";
    public final static IRI i_DELETE = IRI.create(s_i_DELETE);
    public final static String s_i_GET_LOGISTICS_OBJECT = "https://onerecord.iata.org/ns/api#GET_LOGISTICS_OBJECT";
    public final static IRI i_GET_LOGISTICS_OBJECT = IRI.create(s_i_GET_LOGISTICS_OBJECT);
    public final static String s_i_LOGISTICS_EVENT_RECEIVED = "https://onerecord.iata.org/ns/api#LOGISTICS_EVENT_RECEIVED";
    public final static IRI i_LOGISTICS_EVENT_RECEIVED = IRI.create(s_i_LOGISTICS_EVENT_RECEIVED);
    public final static String s_i_LOGISTICS_OBJECT_CREATED = "https://onerecord.iata.org/ns/api#LOGISTICS_OBJECT_CREATED";
    public final static IRI i_LOGISTICS_OBJECT_CREATED = IRI.create(s_i_LOGISTICS_OBJECT_CREATED);
    public final static String s_i_LOGISTICS_OBJECT_IDENTIFIER = "https://onerecord.iata.org/ns/api#LOGISTICS_OBJECT_IDENTIFIER";
    public final static IRI i_LOGISTICS_OBJECT_IDENTIFIER = IRI.create(s_i_LOGISTICS_OBJECT_IDENTIFIER);
    public final static String s_i_LOGISTICS_OBJECT_TYPE = "https://onerecord.iata.org/ns/api#LOGISTICS_OBJECT_TYPE";
    public final static IRI i_LOGISTICS_OBJECT_TYPE = IRI.create(s_i_LOGISTICS_OBJECT_TYPE);
    public final static String s_i_LOGISTICS_OBJECT_UPDATED = "https://onerecord.iata.org/ns/api#LOGISTICS_OBJECT_UPDATED";
    public final static IRI i_LOGISTICS_OBJECT_UPDATED = IRI.create(s_i_LOGISTICS_OBJECT_UPDATED);
    public final static String s_i_PATCH_LOGISTICS_OBJECT = "https://onerecord.iata.org/ns/api#PATCH_LOGISTICS_OBJECT";
    public final static IRI i_PATCH_LOGISTICS_OBJECT = IRI.create(s_i_PATCH_LOGISTICS_OBJECT);
    /**
     * :Permission to add a logistics event.
     * 
     */
    public final static String s_i_POST_LOGISTICS_EVENT = "https://onerecord.iata.org/ns/api#POST_LOGISTICS_EVENT";
    public final static IRI i_POST_LOGISTICS_EVENT = IRI.create(s_i_POST_LOGISTICS_EVENT);
    public final static String s_i_REQUEST_ACCEPTED = "https://onerecord.iata.org/ns/api#REQUEST_ACCEPTED";
    public final static IRI i_REQUEST_ACCEPTED = IRI.create(s_i_REQUEST_ACCEPTED);
    public final static String s_i_REQUEST_FAILED = "https://onerecord.iata.org/ns/api#REQUEST_FAILED";
    public final static IRI i_REQUEST_FAILED = IRI.create(s_i_REQUEST_FAILED);
    public final static String s_i_REQUEST_PENDING = "https://onerecord.iata.org/ns/api#REQUEST_PENDING";
    public final static IRI i_REQUEST_PENDING = IRI.create(s_i_REQUEST_PENDING);
    public final static String s_i_REQUEST_REJECTED = "https://onerecord.iata.org/ns/api#REQUEST_REJECTED";
    public final static IRI i_REQUEST_REJECTED = IRI.create(s_i_REQUEST_REJECTED);
    public final static String s_i_REQUEST_REVOKED = "https://onerecord.iata.org/ns/api#REQUEST_REVOKED";
    public final static IRI i_REQUEST_REVOKED = IRI.create(s_i_REQUEST_REVOKED);
    public final static String s_i_SUBSCRIPTION_REQUEST_ACCEPTED = "https://onerecord.iata.org/ns/api#SUBSCRIPTION_REQUEST_ACCEPTED";
    public final static IRI i_SUBSCRIPTION_REQUEST_ACCEPTED = IRI.create(s_i_SUBSCRIPTION_REQUEST_ACCEPTED);
    public final static String s_i_SUBSCRIPTION_REQUEST_FAILED = "https://onerecord.iata.org/ns/api#SUBSCRIPTION_REQUEST_FAILED";
    public final static IRI i_SUBSCRIPTION_REQUEST_FAILED = IRI.create(s_i_SUBSCRIPTION_REQUEST_FAILED);
    public final static String s_i_SUBSCRIPTION_REQUEST_PENDING = "https://onerecord.iata.org/ns/api#SUBSCRIPTION_REQUEST_PENDING";
    public final static IRI i_SUBSCRIPTION_REQUEST_PENDING = IRI.create(s_i_SUBSCRIPTION_REQUEST_PENDING);
    public final static String s_i_SUBSCRIPTION_REQUEST_REJECTED = "https://onerecord.iata.org/ns/api#SUBSCRIPTION_REQUEST_REJECTED";
    public final static IRI i_SUBSCRIPTION_REQUEST_REJECTED = IRI.create(s_i_SUBSCRIPTION_REQUEST_REJECTED);
    public final static String s_i_SUBSCRIPTION_REQUEST_REVOKED = "https://onerecord.iata.org/ns/api#SUBSCRIPTION_REQUEST_REVOKED";
    public final static IRI i_SUBSCRIPTION_REQUEST_REVOKED = IRI.create(s_i_SUBSCRIPTION_REQUEST_REVOKED);

}
